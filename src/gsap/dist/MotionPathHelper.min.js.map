{"version":3,"file":"MotionPathHelper.min.js","sources":["../src/utils/paths.js","../src/utils/matrix.js","../src/utils/PathEditor.js","../src/MotionPathHelper.js"],"sourcesContent":["/*!\n * paths 3.0.2\n * https://greensock.com\n *\n * Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_DEG2RAD = Math.PI / 180,\n\t_RAD2DEG = 180 / Math.PI,\n\t_sin = Math.sin,\n\t_cos = Math.cos,\n\t_abs = Math.abs,\n\t_sqrt = Math.sqrt,\n\t_atan2 = Math.atan2,\n\t_largeNum = 1e8,\n\t_isString = value => typeof(value) === \"string\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isUndefined = value => typeof(value) === \"undefined\",\n\t_temp = {},\n\t_temp2 = {},\n\t_roundingNum = 1e5,\n\t_wrapProgress = progress => (Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum) || ((progress < 0) ? 0 : 1), //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it's negative because it makes more sense for motion to end at 0 in that case.\n\t_round = value =>  ~~(value * _roundingNum + (value < 0 ? -.5 : .5)) / _roundingNum,\n\t_splitSegment = (rawPath, segIndex, i, t) => {\n\t\tlet segment = rawPath[segIndex],\n\t\t\tshift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\t\tif (shift && shift + i + 2 < segment.length) {\n\t\t\trawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n\t\t\tsegment.splice(0, i + shift);\n\t\t\treturn 1;\n\t\t}\n\t},\n\t_reverseRawPath = (rawPath, skipOuter) => {\n\t\tlet i = rawPath.length;\n\t\tif (!skipOuter) {\n\t\t\trawPath.reverse();\n\t\t}\n\t\twhile (i--) {\n\t\t\tif (!rawPath[i].reversed) {\n\t\t\t\treverseSegment(rawPath[i]);\n\t\t\t}\n\t\t}\n\t},\n\t_copyMetaData = (source, copy) => {\n\t\tcopy.totalLength = source.totalLength;\n\t\tif (source.samples) { //segment\n\t\t\tcopy.samples = source.samples.slice(0);\n\t\t\tcopy.lookup = source.lookup.slice(0);\n\t\t\tcopy.minLength = source.minLength;\n\t\t\tcopy.resolution = source.resolution;\n\t\t} else { //rawPath\n\t\t\tcopy.totalPoints = source.totalPoints;\n\t\t}\n\t\treturn copy;\n\t},\n\t//pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it'll merge it into that same segment (to reduce the number of segments)\n\t_appendOrMerge = (rawPath, segment) => {\n\t\tlet index = rawPath.length,\n\t\t\tprevSeg = rawPath[index - 1] || [],\n\t\t\tl = prevSeg.length;\n\t\tif (segment[0] === prevSeg[l-2] && segment[1] === prevSeg[l-1]) {\n\t\t\tsegment = prevSeg.concat(segment.slice(2));\n\t\t\tindex--;\n\t\t}\n\t\trawPath[index] = segment;\n\t},\n\t_bestDistance;\n\n/* TERMINOLOGY\n - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple \"M\" commands, defining Segments (paths aren't always connected).\n - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.\n - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.\n - the variable \"t\" is typically the position along an individual Bezier path (time) and it's NOT linear, meaning it could accelerate/decelerate based on the control points whereas the \"p\" or \"progress\" value is linearly mapped to the whole path, so it shouldn't really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. \"t\" is ONLY in an individual Bezier piece.\n */\n\n//accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it'll also cache the value so that if it's queried again, it'll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn't changed - it'll check).\nexport function getRawPath(value) {\n\tvalue = (_isString(value) && _selectorExp.test(value)) ? document.querySelector(value) || value : value;\n\tlet e = value.getAttribute ? value : 0,\n\t\trawPath;\n\tif (e && (value = value.getAttribute(\"d\"))) {\n\t\t//implements caching\n\t\tif (!e._gsPath) {\n\t\t\te._gsPath = {};\n\t\t}\n\t\trawPath = e._gsPath[value];\n\t\treturn (rawPath && !rawPath._dirty) ? rawPath : (e._gsPath[value] = stringToRawPath(value));\n\t}\n\treturn !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : (_isNumber(value[0])) ? [value] : value;\n}\n\n//copies a RawPath WITHOUT the length meta data (for speed)\nexport function copyRawPath(rawPath) {\n\tlet a = [],\n\t\ti = 0;\n\tfor (; i < rawPath.length; i++) {\n\t\ta[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n\t}\n\treturn _copyMetaData(rawPath, a);\n}\n\nexport function reverseSegment(segment) {\n\tlet i = 0,\n\t\ty;\n\tsegment.reverse(); //this will invert the order y, x, y, x so we must flip it back.\n\tfor (; i < segment.length; i += 2) {\n\t\ty = segment[i];\n\t\tsegment[i] = segment[i+1];\n\t\tsegment[i+1] = y;\n\t}\n\tsegment.reversed = !segment.reversed;\n}\n\n\n\nlet _createPath = (e, ignore) => {\n\t\tlet path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n\t\t\tattr = [].slice.call(e.attributes),\n\t\t\ti = attr.length,\n\t\t\tname;\n\t\tignore = \",\" + ignore + \",\";\n\t\twhile (--i > -1) {\n\t\t\tname = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.\n\t\t\tif (ignore.indexOf(\",\" + name + \",\") < 0) {\n\t\t\t\tpath.setAttributeNS(null, name, attr[i].nodeValue);\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t},\n\t_typeAttrs = {\n\t\trect:\"rx,ry,x,y,width,height\",\n\t\tcircle:\"r,cx,cy\",\n\t\tellipse:\"rx,ry,cx,cy\",\n\t\tline:\"x1,x2,y1,y2\"\n\t},\n\t_attrToObj = (e, attrs) => {\n\t\tlet props = attrs ? attrs.split(\",\") : [],\n\t\t\tobj = {},\n\t\t\ti = props.length;\n\t\twhile (--i > -1) {\n\t\t\tobj[props[i]] = +e.getAttribute(props[i]) || 0;\n\t\t}\n\t\treturn obj;\n\t};\n\n//converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.\nexport function convertToPath(element, swap) {\n\tlet type = element.tagName.toLowerCase(),\n\t\tcirc = 0.552284749831,\n\t\tdata, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;\n\tif (type === \"path\" || !element.getBBox) {\n\t\treturn element;\n\t}\n\tpath = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n\tattr = _attrToObj(element, _typeAttrs[type]);\n\tif (type === \"rect\") {\n\t\tr = attr.rx;\n\t\try = attr.ry;\n\t\tx = attr.x;\n\t\ty = attr.y;\n\t\tw = attr.width - r * 2;\n\t\th = attr.height - ry * 2;\n\t\tif (r || ry) { //if there are rounded corners, render cubic beziers\n\t\t\tx2 = x + r * (1 - circ);\n\t\t\tx3 = x + r;\n\t\t\tx4 = x3 + w;\n\t\t\tx5 = x4 + r * circ;\n\t\t\tx6 = x4 + r;\n\t\t\ty2 = y + ry * (1 - circ);\n\t\t\ty3 = y + ry;\n\t\t\ty4 = y3 + h;\n\t\t\ty5 = y4 + ry * circ;\n\t\t\ty6 = y4 + ry;\n\t\t\tdata = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n\t\t} else {\n\t\t\tdata = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + (-w) + \" v\" + (-h) + \" h\" + w + \"z\";\n\t\t}\n\n\t} else if (type === \"circle\" || type === \"ellipse\") {\n\t\tif (type === \"circle\") {\n\t\t\tr = ry = attr.r;\n\t\t\trycirc = r * circ;\n\t\t} else {\n\t\t\tr = attr.rx;\n\t\t\try = attr.ry;\n\t\t\trycirc = ry * circ;\n\t\t}\n\t\tx = attr.cx;\n\t\ty = attr.cy;\n\t\trcirc = r * circ;\n\t\tdata = \"M\" + (x+r) + \",\" + y + \" C\" + [x+r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n\t} else if (type === \"line\") {\n\t\tdata = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2; //previously, we just converted to \"Mx,y Lx,y\" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.\n\t} else if (type === \"polyline\" || type === \"polygon\") {\n\t\tpoints = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n\t\tx = points.shift();\n\t\ty = points.shift();\n\t\tdata = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\t\tif (type === \"polygon\") {\n\t\t\tdata += \",\" + x + \",\" + y + \"z\";\n\t\t}\n\t}\n\tpath.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\tif (swap && element.parentNode) {\n\t\telement.parentNode.insertBefore(path, element);\n\t\telement.parentNode.removeChild(element);\n\t}\n\treturn path;\n}\n\n\n\n//returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)\nexport function getRotationAtProgress(rawPath, progress) {\n\tlet d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);\n\treturn getRotationAtBezierT(d.segment, d.i, d.t);\n}\n\nfunction getRotationAtBezierT(segment, i, t) {\n\tlet a = segment[i],\n\t\tb = segment[i+2],\n\t\tc = segment[i+4],\n\t\tx;\n\ta += (b - a) * t;\n\tb += (c - b) * t;\n\ta += (b - a) * t;\n\tx = b + ((c + (segment[i+6] - c) * t) - b) * t - a;\n\ta = segment[i+1];\n\tb = segment[i+3];\n\tc = segment[i+5];\n\ta += (b - a) * t;\n\tb += (c - b) * t;\n\ta += (b - a) * t;\n\treturn _round(_atan2(b + ((c + (segment[i+7] - c) * t) - b) * t - a, x) * _RAD2DEG);\n}\n\nexport function sliceRawPath(rawPath, start, end) {\n\tif (_isUndefined(end)) {\n\t\tend = 1;\n\t}\n\tstart = start || 0;\n\tlet reverse = start > end,\n\t\tloops = Math.max(0, ~~(_abs(end - start) - 1e-8));\n\tif (reverse) {\n\t\treverse = end;\n\t\tend = start;\n\t\tstart = reverse;\n\t\treverse = 1;\n\t\tloops -= loops ? 1 : 0;\n\t}\n\tif (start < 0 || end < 0) {\n\t\tlet offset = ~~Math.min(start, end) + 1;\n\t\tstart += offset;\n\t\tend += offset;\n\t}\n\tlet path = copyRawPath(rawPath.totalLength ? rawPath : cacheRawPathMeasurements(rawPath)),\n\t\twrap = (end > 1),\n\t\ts = getProgressData(path, start, _temp),\n\t\te = getProgressData(path, end, _temp2),\n\t\teSeg = e.segment,\n\t\tsSeg = s.segment,\n\t\teSegIndex = e.segIndex,\n\t\tsSegIndex = s.segIndex,\n\t\tei = e.i,\n\t\tsi = s.i,\n\t\tsameSegment = (sSegIndex === eSegIndex),\n\t\tsameBezier = (ei === si && sameSegment),\n\t\tinvertedOrder = ((sameSegment && si > ei) || (sameBezier && s.t > e.t)),\n\t\tsShift, eShift, i, copy, totalSegments, l, j;\n\tif (wrap || loops) {\n\t\tif (_splitSegment(path, sSegIndex, si, s.t)) {\n\t\t\tsShift = 1;\n\t\t\tsSegIndex++;\n\t\t\tif (sameBezier) {\n\t\t\t\tif (invertedOrder) {\n\t\t\t\t\te.t /= s.t;\n\t\t\t\t} else {\n\t\t\t\t\te.t = (e.t - s.t) / (1 - s.t);\n\t\t\t\t\teSegIndex++;\n\t\t\t\t\tei = 0;\n\t\t\t\t}\n\t\t\t} else if (sSegIndex <= eSegIndex + 1 && !invertedOrder) {\n\t\t\t\teSegIndex++;\n\t\t\t\tif (sameSegment) {\n\t\t\t\t\tei -= si;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!e.t) {\n\t\t\teSegIndex--;\n\t\t\tif (reverse) {\n\t\t\t\tsSegIndex--;\n\t\t\t}\n\t\t} else if (_splitSegment(path, eSegIndex, ei, e.t)) {\n\t\t\tif (invertedOrder && sShift) {\n\t\t\t\tsSegIndex++;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\teSegIndex++;\n\t\t\t}\n\t\t}\n\t\tcopy = [];\n\t\ttotalSegments = path.length;\n\t\tl = 1 + totalSegments * loops;\n\t\tj = sSegIndex;\n\t\tif (reverse) {\n\t\t\teSegIndex = (eSegIndex || totalSegments) - 1;\n\t\t\tl += (totalSegments - eSegIndex + sSegIndex) % totalSegments;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t_appendOrMerge(copy, path[j]);\n\t\t\t\tj = (j || totalSegments) - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tl += ((totalSegments - sSegIndex) + eSegIndex) % totalSegments;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t_appendOrMerge(copy, path[j++ % totalSegments]);\n\t\t\t}\n\t\t}\n\t\tpath = copy;\n\t} else {\n\t\teShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\t\tif (start !== end) {\n\t\t\tsShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\t\t\tif (sameSegment) {\n\t\t\t\teShift += sShift;\n\t\t\t}\n\t\t\teSeg.splice(ei + eShift + 2);\n\t\t\tif (sShift) {\n\t\t\t\tsSeg.splice(0, si + sShift);\n\t\t\t}\n\t\t\ti = path.length;\n\t\t\twhile (i--) {\n\t\t\t\t//chop off any extra segments\n\t\t\t\tif (i < sSegIndex || i > eSegIndex) {\n\t\t\t\t\tpath.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\teSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it'll be impossible to determine the angle after its length is 0!\n\t\t\tei += eShift;\n\t\t\ts = eSeg[ei];\n\t\t\te = eSeg[ei+1];\n\t\t\teSeg.length = eSeg.totalLength = 0;\n\t\t\teSeg.totalPoints = path.totalPoints = 8;\n\t\t\teSeg.push(s, e, s, e, s, e, s, e);\n\t\t}\n\t}\n\tif (reverse) {\n\t\t_reverseRawPath(path, wrap || loops);\n\t}\n\tpath.totalLength = 0;\n\treturn path;\n}\n\n//measures a Segment according to its resolution (so if segment.resolution is 6, for example, it'll take 6 samples equally across each Bezier) and create/populate a \"samples\" array that has the length up to each of those sample points (always increasing from the start) as well as a \"lookup\" array that's broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a \"totalLength\" property, but that's not generally super accurate because by default it'll only take 6 samples per Bezier. But for performance reasons, it's perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don't deviate by more than a certain precision value.\nfunction measureSegment(segment, startIndex, bezierQty) {\n\tstartIndex = startIndex || 0;\n\tif (!segment.samples) {\n\t\tsegment.samples = [];\n\t\tsegment.lookup = [];\n\t}\n\tlet resolution = ~~segment.resolution || 12,\n\t\tinc = 1 / resolution,\n\t\tendIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n\t\tx1 = segment[startIndex],\n\t\ty1 = segment[startIndex + 1],\n\t\tsamplesIndex = startIndex ? (startIndex / 6) * resolution : 0,\n\t\tsamples = segment.samples,\n\t\tlookup = segment.lookup,\n\t\tmin = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n\t\tprevLength = samples[samplesIndex + bezierQty * resolution - 1],\n\t\tlength = startIndex ? samples[samplesIndex-1] : 0,\n\t\ti, j, x4, x3, x2, xd, xd1, y4, y3, y2, yd, yd1, inv, t, lengthIndex, l, segLength;\n\tsamples.length = lookup.length = 0;\n\tfor (j = startIndex + 2; j < endIndex; j += 6) {\n\t\tx4 = segment[j + 4] - x1;\n\t\tx3 = segment[j + 2] - x1;\n\t\tx2 = segment[j] - x1;\n\t\ty4 = segment[j + 5] - y1;\n\t\ty3 = segment[j + 3] - y1;\n\t\ty2 = segment[j + 1] - y1;\n\t\txd = xd1 = yd = yd1 = 0;\n\t\tif (_abs(x4) < 1e-5 && _abs(y4) < 1e-5 && _abs(x2) + _abs(y2) < 1e-5) { //dump points that are sufficiently close (basically right on top of each other, making a bezier super tiny or 0 length)\n\t\t\tif (segment.length > 8) {\n\t\t\t\tsegment.splice(j, 6);\n\t\t\t\tj -= 6;\n\t\t\t\tendIndex -= 6;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\tt = inc * i;\n\t\t\t\tinv = 1 - t;\n\t\t\t\txd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n\t\t\t\tyd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n\t\t\t\tl = _sqrt(yd * yd + xd * xd);\n\t\t\t\tif (l < min) {\n\t\t\t\t\tmin = l;\n\t\t\t\t}\n\t\t\t\tlength += l;\n\t\t\t\tsamples[samplesIndex++] = length;\n\t\t\t}\n\t\t}\n\t\tx1 += x4;\n\t\ty1 += y4;\n\t}\n\tif (prevLength) {\n\t\tprevLength -= length;\n\t\tfor (; samplesIndex < samples.length; samplesIndex++) {\n\t\t\tsamples[samplesIndex] += prevLength;\n\t\t}\n\t}\n\tif (samples.length && min) {\n\t\tsegment.totalLength = segLength = samples[samples.length-1] || 0;\n\t\tsegment.minLength = min;\n\t\tl = lengthIndex = 0;\n\t\tfor (i = 0; i < segLength; i += min) {\n\t\t\tlookup[l++] = (samples[lengthIndex] < i) ? ++lengthIndex : lengthIndex;\n\t\t}\n\t} else {\n\t\tsegment.totalLength = samples[0] = 0;\n\t}\n\treturn startIndex ? length - samples[startIndex / 2 - 1] : length;\n}\n\nexport function cacheRawPathMeasurements(rawPath, resolution) {\n\tlet pathLength, points, i;\n\tfor (i = pathLength = points = 0; i < rawPath.length; i++) {\n\t\trawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)\n\t\tpoints += rawPath[i].length;\n\t\tpathLength += measureSegment(rawPath[i]);\n\t}\n\trawPath.totalPoints = points;\n\trawPath.totalLength = pathLength;\n\treturn rawPath;\n}\n\n//divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)\nexport function subdivideSegment(segment, i, t) {\n\tif (t <= 0 || t >= 1) {\n\t\treturn 0;\n\t}\n\tlet ax = segment[i],\n\t\tay = segment[i+1],\n\t\tcp1x = segment[i+2],\n\t\tcp1y = segment[i+3],\n\t\tcp2x = segment[i+4],\n\t\tcp2y = segment[i+5],\n\t\tbx = segment[i+6],\n\t\tby = segment[i+7],\n\t\tx1a = ax + (cp1x - ax) * t,\n\t\tx2 = cp1x + (cp2x - cp1x) * t,\n\t\ty1a = ay + (cp1y - ay) * t,\n\t\ty2 = cp1y + (cp2y - cp1y) * t,\n\t\tx1 = x1a + (x2 - x1a) * t,\n\t\ty1 = y1a + (y2 - y1a) * t,\n\t\tx2a = cp2x + (bx - cp2x) * t,\n\t\ty2a = cp2y + (by - cp2y) * t;\n\tx2 += (x2a - x2) * t;\n\ty2 += (y2a - y2) * t;\n\tsegment.splice(i + 2, 4,\n\t\t_round(x1a),                  //first control point\n\t\t_round(y1a),\n\t\t_round(x1),                   //second control point\n\t\t_round(y1),\n\t\t_round(x1 + (x2 - x1) * t),   //new fabricated anchor on line\n\t\t_round(y1 + (y2 - y1) * t),\n\t\t_round(x2),                   //third control point\n\t\t_round(y2),\n\t\t_round(x2a),                  //fourth control point\n\t\t_round(y2a)\n\t);\n\tif (segment.samples) {\n\t\tsegment.samples.splice(((i / 6) * segment.resolution) | 0, 0, 0, 0, 0, 0, 0, 0);\n\t}\n\treturn 6;\n}\n\n// returns an object {path, segment, segIndex, i, t}\nfunction getProgressData(rawPath, progress, decoratee) {\n\tdecoratee = decoratee || {};\n\tif (!rawPath.totalLength) {\n\t\tcacheRawPathMeasurements(rawPath);\n\t}\n\tif (progress < 0 || progress > 1) {\n\t\tprogress = _wrapProgress(progress);\n\t}\n\tlet segIndex = 0,\n\t\tsegment = rawPath[0],\n\t\tsamples, resolution, length, min, max, i;\n\tif (rawPath.length > 1) { //speed optimization: most of the time, there's only one segment so skip the recursion.\n\t\tlength = rawPath.totalLength * progress;\n\t\tmax = i = 0;\n\t\twhile ((max += rawPath[i++].totalLength) < length) {\n\t\t\tsegIndex = i;\n\t\t}\n\t\tsegment = rawPath[segIndex];\n\t\tmin = max - segment.totalLength;\n\t\tprogress = ((length - min) / (max - min)) || 0;\n\t}\n\tsamples = segment.samples;\n\tresolution = segment.resolution; //how many samples per cubic bezier chunk\n\tlength = segment.totalLength * progress;\n\ti = segment.lookup[~~(length / segment.minLength)] || 0;\n\tmin = i ? samples[i-1] : 0;\n\tmax = samples[i];\n\tif (max < length) {\n\t\tmin = max;\n\t\tmax = samples[++i];\n\t}\n\tdecoratee.path = rawPath;\n\tdecoratee.segment = segment;\n\tdecoratee.segIndex = segIndex;\n\tdecoratee.i = ~~(i / resolution) * 6;\n\tdecoratee.t = (1 / resolution) * (((length - min) / (max - min)) + ((i % resolution)));\n\treturn decoratee;\n}\n\nexport function getPositionOnPath(rawPath, progress, includeAngle, point) {\n\tlet segment = rawPath[0],\n\t\tresult = point || {},\n\t\tsamples, resolution, length, min, max, i, t, a, inv;\n\tif (progress < 0 || progress > 1) {\n\t\tprogress = _wrapProgress(progress);\n\t}\n\tif (rawPath.length > 1) { //speed optimization: most of the time, there's only one segment so skip the recursion.\n\t\tlength = rawPath.totalLength * progress;\n\t\tmax = i = 0;\n\t\twhile ((max += rawPath[i++].totalLength) < length) {\n\t\t\tsegment = rawPath[i];\n\t\t}\n\t\tmin = max - segment.totalLength;\n\t\tprogress = ((length - min) / (max - min)) || 0;\n\t}\n\tsamples = segment.samples;\n\tresolution = segment.resolution;\n\tlength = segment.totalLength * progress;\n\ti = segment.lookup[~~(length / segment.minLength)] || 0;\n\tmin = i ? samples[i-1] : 0;\n\tmax = samples[i];\n\tif (max < length) {\n\t\tmin = max;\n\t\tmax = samples[++i];\n\t}\n\tt = ((1 / resolution) * (((length - min) / (max - min)) + ((i % resolution)))) || 0;\n\tinv = 1 - t;\n\ti = ~~(i / resolution) * 6;\n\ta = segment[i];\n\tresult.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n\tresult.y = _round((t * t * (segment[i + 7] - (a = segment[i+1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\tif (includeAngle) {\n\t\tresult.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n\t}\n\treturn result;\n}\n\n\n\n//applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).\nexport function transformRawPath(rawPath, a, b, c, d, tx, ty) {\n\tlet j = rawPath.length,\n\t\tsegment, l, i, x, y;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tl = segment.length;\n\t\tfor (i = 0; i < l; i += 2) {\n\t\t\tx = segment[i];\n\t\t\ty = segment[i+1];\n\t\t\tsegment[i] = x * a + y * c + tx;\n\t\t\tsegment[i+1] = x * b + y * d + ty;\n\t\t}\n\t}\n\trawPath._dirty = 1;\n\treturn rawPath;\n}\n\n\n\n// translates SVG arc data into a segment (cubic beziers). Angle is in degrees.\nfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n\tif (lastX === x && lastY === y) {\n\t\treturn;\n\t}\n\trx = _abs(rx);\n\try = _abs(ry);\n\tlet angleRad = (angle % 360) * _DEG2RAD,\n\t\tcosAngle = _cos(angleRad),\n\t\tsinAngle = _sin(angleRad),\n\t\tPI = Math.PI,\n\t\tTWOPI = PI * 2,\n\t\tdx2 = (lastX - x) / 2,\n\t\tdy2 = (lastY - y) / 2,\n\t\tx1 = (cosAngle * dx2 + sinAngle * dy2),\n\t\ty1 = (-sinAngle * dx2 + cosAngle * dy2),\n\t\tx1_sq = x1 * x1,\n\t\ty1_sq = y1 * y1,\n\t\tradiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\tif (radiiCheck > 1) {\n\t\trx = _sqrt(radiiCheck) * rx;\n\t\try = _sqrt(radiiCheck) * ry;\n\t}\n\tlet rx_sq = rx * rx,\n\t\try_sq = ry * ry,\n\t\tsq = ((rx_sq * ry_sq) - (rx_sq * y1_sq) - (ry_sq * x1_sq)) / ((rx_sq * y1_sq) + (ry_sq * x1_sq));\n\tif (sq < 0) {\n\t\tsq = 0;\n\t}\n\tlet coef = ((largeArcFlag === sweepFlag) ? -1 : 1) * _sqrt(sq),\n\t\tcx1 = coef * ((rx * y1) / ry),\n\t\tcy1 = coef * -((ry * x1) / rx),\n\t\tsx2 = (lastX + x) / 2,\n\t\tsy2 = (lastY + y) / 2,\n\t\tcx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n\t\tcy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n\t\tux = (x1 - cx1) / rx,\n\t\tuy = (y1 - cy1) / ry,\n\t\tvx = (-x1 - cx1) / rx,\n\t\tvy = (-y1 - cy1) / ry,\n\t\ttemp = ux * ux + uy * uy,\n\t\tangleStart = ((uy < 0) ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n\t\tangleExtent = ((ux * vy - uy * vx < 0) ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\tif (isNaN(angleExtent)) { //rare edge case. Math.cos(-1) is NaN.\n\t\tangleExtent = PI;\n\t}\n\tif (!sweepFlag && angleExtent > 0) {\n\t\tangleExtent -= TWOPI;\n\t} else if (sweepFlag && angleExtent < 0) {\n\t\tangleExtent += TWOPI;\n\t}\n\tangleStart %= TWOPI;\n\tangleExtent %= TWOPI;\n\tlet segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n\t\trawPath = [],\n\t\tangleIncrement = angleExtent / segments,\n\t\tcontrolLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n\t\tma = cosAngle * rx,\n\t\tmb = sinAngle * rx,\n\t\tmc = sinAngle * -ry,\n\t\tmd = cosAngle * ry,\n\t\ti;\n\tfor (i = 0; i < segments; i++) {\n\t\tangle = angleStart + i * angleIncrement;\n\t\tx1 = _cos(angle);\n\t\ty1 = _sin(angle);\n\t\tux = _cos(angle += angleIncrement);\n\t\tuy = _sin(angle);\n\t\trawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n\t}\n\t//now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n\tfor (i = 0; i < rawPath.length; i+=2) {\n\t\tx1 = rawPath[i];\n\t\ty1 = rawPath[i+1];\n\t\trawPath[i] = x1 * ma + y1 * mc + cx;\n\t\trawPath[i+1] = x1 * mb + y1 * md + cy;\n\t}\n\trawPath[i-2] = x; //always set the end to exactly where it's supposed to be\n\trawPath[i-1] = y;\n\treturn rawPath;\n}\n\n//Spits back a RawPath with absolute coordinates. Each segment starts with a \"moveTo\" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\nexport function stringToRawPath(d) {\n\tlet a = (d + \"\").replace(_scientific, m => { let n = +m; return (n < 0.0001 && n > -0.0001) ? 0 : n; }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n\t\tpath = [],\n\t\trelativeX = 0,\n\t\trelativeY = 0,\n\t\ttwoThirds = 2 / 3,\n\t\telements = a.length,\n\t\tpoints = 0,\n\t\terrorMessage = \"ERROR: malformed path: \" + d,\n\t\ti, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand,\n\t\tline = function(sx, sy, ex, ey) {\n\t\t\tdifX = (ex - sx) / 3;\n\t\t\tdifY = (ey - sy) / 3;\n\t\t\tsegment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n\t\t};\n\tif (!d || !isNaN(a[0]) || isNaN(a[1])) {\n\t\tconsole.log(errorMessage);\n\t\treturn path;\n\t}\n\tfor (i = 0; i < elements; i++) {\n\t\tprevCommand = command;\n\t\tif (isNaN(a[i])) {\n\t\t\tcommand = a[i].toUpperCase();\n\t\t\tisRelative = (command !== a[i]); //lower case means relative\n\t\t} else { //commands like \"C\" can be strung together without any new command characters between.\n\t\t\ti--;\n\t\t}\n\t\tx = +a[i + 1];\n\t\ty = +a[i + 2];\n\t\tif (isRelative) {\n\t\t\tx += relativeX;\n\t\t\ty += relativeY;\n\t\t}\n\t\tif (!i) {\n\t\t\tstartX = x;\n\t\t\tstartY = y;\n\t\t}\n\n\t\t// \"M\" (move)\n\t\tif (command === \"M\") {\n\t\t\tif (segment) {\n\t\t\t\tif (segment.length < 8) { //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n\t\t\t\t\tpath.length -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tpoints += segment.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = startX = x;\n\t\t\trelativeY = startY = y;\n\t\t\tsegment = [x, y];\n\t\t\tpath.push(segment);\n\t\t\ti += 2;\n\t\t\tcommand = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n\n\t\t// \"C\" (cubic bezier)\n\t\t} else if (command === \"C\") {\n\t\t\tif (!segment) {\n\t\t\t\tsegment = [0, 0];\n\t\t\t}\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\t//note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\t\t\tsegment.push(x,\ty, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, (relativeX += a[i + 5] * 1),\t(relativeY += a[i + 6] * 1));\n\t\t\ti += 6;\n\n\t\t// \"S\" (continuation of cubic bezier)\n\t\t} else if (command === \"S\") {\n\t\t\tdifX = relativeX;\n\t\t\tdifY = relativeY;\n\t\t\tif (prevCommand === \"C\" || prevCommand === \"S\") {\n\t\t\t\tdifX += relativeX - segment[segment.length - 4];\n\t\t\t\tdifY += relativeY - segment[segment.length - 3];\n\t\t\t}\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\tsegment.push(difX, difY, x,\ty, (relativeX += a[i + 3] * 1), (relativeY += a[i + 4] * 1));\n\t\t\ti += 4;\n\n\t\t// \"Q\" (quadratic bezier)\n\t\t} else if (command === \"Q\") {\n\t\t\tdifX = relativeX + (x - relativeX) * twoThirds;\n\t\t\tdifY = relativeY + (y - relativeY) * twoThirds;\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\trelativeX += a[i + 3] * 1;\n\t\t\trelativeY += a[i + 4] * 1;\n\t\t\tsegment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n\t\t\ti += 4;\n\n\t\t// \"T\" (continuation of quadratic bezier)\n\t\t} else if (command === \"T\") {\n\t\t\tdifX = relativeX - segment[segment.length - 4];\n\t\t\tdifY = relativeY - segment[segment.length - 3];\n\t\t\tsegment.push(relativeX + difX, relativeY + difY, x + ((relativeX + difX * 1.5) - x) * twoThirds, y + ((relativeY + difY * 1.5) - y) * twoThirds, (relativeX = x), (relativeY = y));\n\t\t\ti += 2;\n\n\t\t// \"H\" (horizontal line)\n\t\t} else if (command === \"H\") {\n\t\t\tline(relativeX, relativeY, (relativeX = x), relativeY);\n\t\t\ti += 1;\n\n\t\t// \"V\" (vertical line)\n\t\t} else if (command === \"V\") {\n\t\t\t//adjust values because the first (and only one) isn't x in this case, it's y.\n\t\t\tline(relativeX, relativeY, relativeX, (relativeY = x + (isRelative ? relativeY - relativeX : 0)));\n\t\t\ti += 1;\n\n\t\t// \"L\" (line) or \"Z\" (close)\n\t\t} else if (command === \"L\" || command === \"Z\") {\n\t\t\tif (command === \"Z\") {\n\t\t\t\tx = startX;\n\t\t\t\ty = startY;\n\t\t\t\tsegment.closed = true;\n\t\t\t}\n\t\t\tif (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n\t\t\t\tline(relativeX, relativeY, x, y);\n\t\t\t\tif (command === \"L\") {\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = x;\n\t\t\trelativeY = y;\n\n\t\t// \"A\" (arc)\n\t\t} else if (command === \"A\") {\n\t\t\tbeziers = arcToSegment(relativeX, relativeY, +a[i+1], +a[i+2], +a[i+3], +a[i+4], +a[i+5], (isRelative ? relativeX : 0) + a[i+6]*1, (isRelative ? relativeY : 0) + a[i+7]*1);\n\t\t\tif (beziers) {\n\t\t\t\tfor (j = 0; j < beziers.length; j++) {\n\t\t\t\t\tsegment.push(beziers[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = segment[segment.length-2];\n\t\t\trelativeY = segment[segment.length-1];\n\t\t\ti += 7;\n\n\t\t} else {\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\t}\n\ti = segment.length;\n\tif (i < 6) { //in case there's odd SVG like a M0,0 command at the very end.\n\t\tpath.pop();\n\t\ti = 0;\n\t} else if (segment[0] === segment[i-2] && segment[1] === segment[i-1]) {\n\t\tsegment.closed = true;\n\t}\n\tpath.totalPoints = points + i;\n\treturn path;\n}\n\n//populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we're handling segment arrays\nexport function bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n\tlet x12 = (x1 + x2) / 2,\n\t\ty12 = (y1 + y2) / 2,\n\t\tx23 = (x2 + x3) / 2,\n\t\ty23 = (y2 + y3) / 2,\n\t\tx34 = (x3 + x4) / 2,\n\t\ty34 = (y3 + y4) / 2,\n\t\tx123 = (x12 + x23) / 2,\n\t\ty123 = (y12 + y23) / 2,\n\t\tx234 = (x23 + x34) / 2,\n\t\ty234 = (y23 + y34) / 2,\n\t\tx1234 = (x123 + x234) / 2,\n\t\ty1234 = (y123 + y234) / 2,\n\t\tdx = x4 - x1,\n\t\tdy = y4 - y1,\n\t\td2 = _abs((x2 - x4) * dy - (y2 - y4) * dx),\n\t\td3 = _abs((x3 - x4) * dy - (y3 - y4) * dx),\n\t\tlength;\n\tif (!points) {\n\t\tpoints = [x1, y1, x4, y4];\n\t\tindex = 2;\n\t}\n\tpoints.splice(index || points.length - 2, 0, x1234, y1234);\n\tif ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n\t\tlength = points.length;\n\t\tbezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n\t\tbezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));\n\t}\n\treturn points;\n}\n\n/*\nfunction getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians\n\tvar dx1 = x1 - x0,\n\t\tdy1 = y1 - y0,\n\t\tdx2 = x2 - x1,\n\t\tdy2 = y2 - y1,\n\t\tdx3 = x2 - x0,\n\t\tdy3 = y2 - y0,\n\t\ta = dx1 * dx1 + dy1 * dy1,\n\t\tb = dx2 * dx2 + dy2 * dy2,\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\treturn Math.acos( (a + b - c) / _sqrt(4 * a * b) );\n},\n*/\n\n//pointsToSegment() doesn't handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)\nexport function flatPointsToSegment(points, curviness=1) {\n\tlet x = points[0],\n\t\ty = 0,\n\t\tsegment = [x, y],\n\t\ti = 2;\n\tfor (; i < points.length; i+=2) {\n\t\tsegment.push(\n\t\t\tx,\n\t\t\ty,\n\t\t\tpoints[i],\n\t\t\t(y = (points[i] - x) * curviness / 2),\n\t\t\t(x = points[i]),\n\t\t\t-y\n\t\t);\n\t}\n\treturn segment;\n}\n\n//points is an array of x/y points, like [x, y, x, y, x, y]\nexport function pointsToSegment(points, curviness, cornerThreshold) {\n\t//points = simplifyPoints(points, tolerance);\n\tlet l = points.length-2,\n\t\tx = +points[0],\n\t\ty = +points[1],\n\t\tnextX = +points[2],\n\t\tnextY = +points[3],\n\t\tsegment = [x, y, x, y],\n\t\tdx2 = nextX - x,\n\t\tdy2 = nextY - y,\n\t\tprevX, prevY, angle, slope, i, dx1, dx3, dy1, dy3, d1, d2, a, b, c;\n\tif (isNaN(cornerThreshold)) {\n\t\tcornerThreshold = Math.PI / 10;\n\t}\n\tcurviness = (curviness || curviness === 0) ? +curviness : 1;\n\tfor (i = 2; i < l; i+=2) {\n\t\tprevX = x;\n\t\tprevY = y;\n\t\tx = nextX;\n\t\ty = nextY;\n\t\tnextX = +points[i+2];\n\t\tnextY = +points[i+3];\n\t\tdx1 = dx2;\n\t\tdy1 = dy2;\n\t\tdx2 = nextX - x;\n\t\tdy2 = nextY - y;\n\t\tdx3 = nextX - prevX;\n\t\tdy3 = nextY - prevY;\n\t\ta = dx1 * dx1 + dy1 * dy1;\n\t\tb = dx2 * dx2 + dy2 * dy2;\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\t\tangle = Math.acos( (a + b - c) / _sqrt(4 * a * b) ); //angle between the 3 points\n\t\td2 = (angle / Math.PI) * curviness; //temporary precalculation for speed (reusing d2 variable)\n\t\td1 = _sqrt(a) * d2; //the tighter the angle, the shorter we make the handles in proportion.\n\t\td2 *= _sqrt(b);\n\t\tif (x !== prevX || y !== prevY) {\n\t\t\tif (angle > cornerThreshold) {\n\t\t\t\tslope = _atan2(dy3, dx3);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x - _cos(slope) * d1),   //first control point\n\t\t\t\t\t_round(y - _sin(slope) * d1),\n\t\t\t\t\t_round(x),                      //anchor\n\t\t\t\t\t_round(y),\n\t\t\t\t\t_round(x + _cos(slope) * d2),   //second control point\n\t\t\t\t\t_round(y + _sin(slope) * d2)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tslope = _atan2(dy1, dx1);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x - _cos(slope) * d1),   //first control point\n\t\t\t\t\t_round(y - _sin(slope) * d1));\n\t\t\t\tslope = _atan2(dy2, dx2);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x),                      //anchor\n\t\t\t\t\t_round(y),\n\t\t\t\t\t_round(x + _cos(slope) * d2),   //second control point\n\t\t\t\t\t_round(y + _sin(slope) * d2)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tsegment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY));\n\treturn segment;\n}\n\n//returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2\nfunction pointToSegDist(x, y, x1, y1, x2, y2) {\n\tlet dx = x2 - x1,\n\t\tdy = y2 - y1,\n\t\tt;\n\tif (dx || dy) {\n\t\tt = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\t\tif (t > 1) {\n\t\t\tx1 = x2;\n\t\t\ty1 = y2;\n\t\t} else if (t > 0) {\n\t\t\tx1 += dx * t;\n\t\t\ty1 += dy * t;\n\t\t}\n\t}\n\treturn (x - x1) ** 2 + (y - y1) ** 2;\n}\n\nfunction simplifyStep(points, first, last, tolerance, simplified) {\n\tlet maxSqDist = tolerance,\n\t\tfirstX = points[first],\n\t\tfirstY = points[first+1],\n\t\tlastX = points[last],\n\t\tlastY = points[last+1],\n\t\tindex, i, d;\n\tfor (i = first + 2; i < last; i += 2) {\n\t\td = pointToSegDist(points[i], points[i+1], firstX, firstY, lastX, lastY);\n\t\tif (d > maxSqDist) {\n\t\t\tindex = i;\n\t\t\tmaxSqDist = d;\n\t\t}\n\t}\n\tif (maxSqDist > tolerance) {\n\t\tif (index - first > 2) {\n\t\t\tsimplifyStep(points, first, index, tolerance, simplified);\n\t\t}\n\t\tsimplified.push(points[index], points[index+1]);\n\t\tif (last - index > 2) {\n\t\t\tsimplifyStep(points, index, last, tolerance, simplified);\n\t\t}\n\t}\n}\n\n//points is an array of x/y values like [x, y, x, y, x, y]\nexport function simplifyPoints(points, tolerance) {\n\tlet prevX = parseFloat(points[0]),\n\t\tprevY = parseFloat(points[1]),\n\t\ttemp = [prevX, prevY],\n\t\tl = points.length - 2,\n\t\ti, x, y, dx, dy, result, last;\n\ttolerance = (tolerance || 1) ** 2;\n\tfor (i = 2; i < l; i += 2) {\n\t\tx = parseFloat(points[i]);\n\t\ty = parseFloat(points[i+1]);\n\t\tdx = prevX - x;\n\t\tdy = prevY - y;\n\t\tif (dx * dx + dy * dy > tolerance) {\n\t\t\ttemp.push(x, y);\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t}\n\ttemp.push(parseFloat(points[l]), parseFloat(points[l+1]));\n\tlast = temp.length - 2;\n\tresult = [temp[0], temp[1]];\n\tsimplifyStep(temp, 0, last, tolerance, result);\n\tresult.push(temp[last], temp[last+1]);\n\treturn result;\n}\n\nfunction getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {\n\tlet inc = (end - start) / slices,\n\t\tbest = 0,\n\t\tt = start,\n\t\tx, y, d, dx, dy, inv;\n\t_bestDistance = _largeNum;\n\twhile (t <= end) {\n\t\tinv = 1 - t;\n\t\tx = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;\n\t\ty = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;\n\t\tdx = x - px;\n\t\tdy = y - py;\n\t\td = dx * dx + dy * dy;\n\t\tif (d < _bestDistance) {\n\t\t\t_bestDistance = d;\n\t\t\tbest = t;\n\t\t}\n\t\tt += inc;\n\t}\n\treturn (iterations > 1) ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;\n}\n\nexport function getClosestData(rawPath, x, y, slices) { //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)\n\tlet closest = {j:0, i:0, t:0},\n\t\tbestDistance = _largeNum,\n\t\ti, j, t, segment;\n\tfor (j = 0; j < rawPath.length; j++) {\n\t\tsegment = rawPath[j];\n\t\tfor (i = 0; i < segment.length; i+=6) {\n\t\t\tt = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i+1], segment[i+2], segment[i+3], segment[i+4], segment[i+5], segment[i+6], segment[i+7]);\n\t\t\tif (bestDistance > _bestDistance) {\n\t\t\t\tbestDistance = _bestDistance;\n\t\t\t\tclosest.j = j;\n\t\t\t\tclosest.i = i;\n\t\t\t\tclosest.t = t;\n\t\t\t}\n\t\t}\n\t}\n\treturn closest;\n}\n\n//subdivide a Segment closest to a specific x,y coordinate\nexport function subdivideSegmentNear(x, y, segment, slices, iterations) {\n\tlet l = segment.length,\n\t\tbestDistance = _largeNum,\n\t\tbestT = 0,\n\t\tbestSegmentIndex = 0,\n\t\tt, i;\n\tslices = slices || 20;\n\titerations = iterations || 3;\n\tfor (i = 0; i < l; i += 6) {\n\t\tt = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i+1], segment[i+2], segment[i+3], segment[i+4], segment[i+5], segment[i+6], segment[i+7]);\n\t\tif (bestDistance > _bestDistance) {\n\t\t\tbestDistance = _bestDistance;\n\t\t\tbestT = t;\n\t\t\tbestSegmentIndex = i;\n\t\t}\n\t}\n\tt = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex+1], segment[bestSegmentIndex+2], segment[bestSegmentIndex+3], segment[bestSegmentIndex+4], segment[bestSegmentIndex+5], segment[bestSegmentIndex+6], segment[bestSegmentIndex+7]);\n\tsubdivideSegment(segment, bestSegmentIndex, t);\n\treturn bestSegmentIndex + 6;\n}\n\n/*\nTakes any of the following and converts it to an all Cubic Bezier SVG data string:\n- A <path> data string like \"M0,0 L2,4 v20,15 H100\"\n- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]\n- A Segment, like [x, y, x, y, x, y, x, y]\n\nNote: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13\n*/\nexport function rawPathToString(rawPath) {\n\tif (_isNumber(rawPath[0])) { //in case a segment is passed in instead\n\t\trawPath = [rawPath];\n\t}\n\tlet result = \"\",\n\t\tl = rawPath.length,\n\t\tsl, s, i, segment;\n\tfor (s = 0; s < l; s++) {\n\t\tsegment = rawPath[s];\n\t\tresult += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n\t\tsl = segment.length;\n\t\tfor (i = 2; i < sl; i++) {\n\t\t\tresult += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n\t\t}\n\t\tif (segment.closed) {\n\t\t\tresult += \"z\";\n\t\t}\n\t}\n\treturn result;\n}\n\n/*\n// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o'clock to 6 o'clock, it'd just go directly/linearly rather than around. So the length would be very short in the middle of the tween.\nexport function cpCoordsToAngles(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tx, y, i;\n\tfor (i = 0; i < segment.length; i+=6) {\n\t\tx = segment[i+2] - segment[i];\n\t\ty = segment[i+3] - segment[i+1];\n\t\tresult[i+2] = Math.atan2(y, x);\n\t\tresult[i+3] = Math.sqrt(x * x + y * y);\n\t\tx = segment[i+6] - segment[i+4];\n\t\ty = segment[i+7] - segment[i+5];\n\t\tresult[i+4] = Math.atan2(y, x);\n\t\tresult[i+5] = Math.sqrt(x * x + y * y);\n\t}\n\treturn result;\n}\n\n// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.\nexport function cpAnglesToCoords(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tlength = segment.length,\n\t\trnd = 1000,\n\t\tangle, l, i, j;\n\tfor (i = 0; i < length; i+=6) {\n\t\tangle = segment[i+2];\n\t\tl = segment[i+3]; //length\n\t\tresult[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t\tangle = segment[i+4];\n\t\tl = segment[i+5]; //length\n\t\tresult[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t}\n\treturn result;\n}\n\n//adds an \"isSmooth\" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\nexport function populateSmoothData(rawPath) {\n\tlet j = rawPath.length,\n\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\tisSmooth.length = 4;\n\t\tl = segment.length - 2;\n\t\tfor (i = 6; i < l; i += 6) {\n\t\t\tx = segment[i] - segment[i - 2];\n\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tsmooth = (Math.abs(a - a2) < 0.09);\n\t\t\tif (smooth) {\n\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t}\n\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t}\n\t\t//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\tx = segment[0] - segment[l-2];\n\t\t\ty = segment[1] - segment[l-1];\n\t\t\tx2 = segment[2] - segment[0];\n\t\t\ty2 = segment[3] - segment[1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tif (Math.abs(a - a2) < 0.09) {\n\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\tsmoothData[2] = a2;\n\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t}\n\t\t}\n\t}\n\treturn rawPath;\n}\nexport function pointToScreen(svgElement, point) {\n\tif (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point\n\t\tlet rawPath = getRawPath(svgElement);\n\t\tpoint = svgElement.ownerSVGElement.createSVGPoint();\n\t\tpoint.x = rawPath[0][0];\n\t\tpoint.y = rawPath[0][1];\n\t}\n\treturn point.matrixTransform(svgElement.getScreenCTM());\n}\n\n*/","/*!\n * matrix 3.0.2\n * https://greensock.com\n *\n * Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet _doc, _win, _docElement, _body,\t_divContainer, _svgContainer, _identityMatrix,\n\t_transformProp = \"transform\",\n\t_transformOriginProp = _transformProp + \"Origin\",\n\t_setDoc = element => {\n\t\tlet doc = element.ownerDocument || element;\n\t\tif (!(_transformProp in element.style) && \"msTransform\" in element.style) { //to improve compatibility with old Microsoft browsers\n\t\t\t_transformProp = \"msTransform\";\n\t\t\t_transformOriginProp = _transformProp + \"Origin\";\n\t\t}\n\t\twhile (doc.parentNode && (doc = doc.parentNode)) {\t}\n\t\t_win = window;\n\t\t_identityMatrix = new Matrix2D();\n\t\tif (doc) {\n\t\t\t_doc = doc;\n\t\t\t_docElement = doc.documentElement;\n\t\t\t_body = doc.body;\n\t\t}\n\t\treturn doc;\n\t},\n\t_svgTemps = [], //we create 3 elements for SVG, and 3 for other DOM elements and cache them for performance reasons. They get nested in _divContainer and _svgContainer so that just one element is added to the DOM on each successive attempt. Again, performance is key.\n\t_divTemps = [],\n\t_getDocScrollTop = () => _win.pageYOffset  || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0,\n\t_getDocScrollLeft = () => _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0,\n\t_svgOwner = element => element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null),\n\t_isFixed = element => {\n\t\tif (_win.getComputedStyle(element).position === \"fixed\") {\n\t\t\treturn true;\n\t\t}\n\t\telement = element.parentNode;\n\t\tif (element && element.nodeType === 1) { // avoid document fragments which will throw an error.\n\t\t\treturn _isFixed(element);\n\t\t}\n\t},\n\t_createSibling = (element, i) => {\n\t\tif (element.parentNode && (_doc || _setDoc(element))) {\n\t\t\tlet svg = _svgOwner(element),\n\t\t\t\tns = svg ? (svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\") : \"http://www.w3.org/1999/xhtml\",\n\t\t\t\ttype = svg ? (i ? \"rect\" : \"g\") : \"div\",\n\t\t\t\tx = i !== 2 ? 0 : 100,\n\t\t\t\ty = i === 3 ? 100 : 0,\n\t\t\t\tcss = \"position:absolute;display:block;\",\n\t\t\t\te = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\t\t\tif (i) {\n\t\t\t\tif (!svg) {\n\t\t\t\t\tif (!_divContainer) {\n\t\t\t\t\t\t_divContainer = _createSibling(element);\n\t\t\t\t\t\t_divContainer.style.cssText = css;\n\t\t\t\t\t}\n\t\t\t\t\te.style.cssText = css + \"width:1px;height:1px;top:\" + y + \"px;left:\" + x + \"px\";\n\t\t\t\t\t_divContainer.appendChild(e);\n\n\t\t\t\t} else {\n\t\t\t\t\tif (!_svgContainer) {\n\t\t\t\t\t\t_svgContainer = _createSibling(element);\n\t\t\t\t\t}\n\t\t\t\t\te.setAttribute(\"width\", 1);\n\t\t\t\t\te.setAttribute(\"height\", 1);\n\t\t\t\t\te.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\t\t\t\t\t_svgContainer.appendChild(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn e;\n\t\t}\n\t\tthrow \"Need document and parent.\";\n\t},\n\t_placeSiblings = element => {\n\t\tlet svg = _svgOwner(element),\n\t\t\tisRootSVG = element === svg,\n\t\t\tsiblings = svg ? _svgTemps : _divTemps,\n\t\t\tcontainer, m, b, x, y;\n\t\tif (element === _win) {\n\t\t\treturn element;\n\t\t}\n\t\tif (!siblings.length) {\n\t\t\tsiblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n\t\t}\n\t\tcontainer = svg ? _svgContainer : _divContainer;\n\t\tif (svg) {\n\t\t\tb = isRootSVG ? {x:0, y:0} : element.getBBox();\n\t\t\tm = element.transform ? element.transform.baseVal : []; // IE11 doesn't follow the spec.\n\t\t\tif (m.length) {\n\t\t\t\tm = m.consolidate().matrix;\n\t\t\t\tx = m.a * b.x + m.c * b.y;\n\t\t\t\ty = m.b * b.x + m.d * b.y;\n\t\t\t} else {\n\t\t\t\tm = _identityMatrix;\n\t\t\t\tif (element.tagName.toLowerCase() === \"g\") {\n\t\t\t\t\tx = y = 0;\n\t\t\t\t} else {\n\t\t\t\t\tx = b.x;\n\t\t\t\t\ty = b.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontainer.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n\t\t\t(isRootSVG ? svg : element.parentNode).appendChild(container);\n\t\t} else {\n\t\t\tcontainer.style.top = element.offsetTop + \"px\";\n\t\t\tcontainer.style.left = element.offsetLeft + \"px\";\n\t\t\tm = _win.getComputedStyle(element);\n\t\t\tcontainer.style[_transformProp] = m[_transformProp];\n\t\t\tcontainer.style[_transformOriginProp] = m[_transformOriginProp];\n\t\t\tcontainer.style.position = m.position === \"fixed\" ? \"fixed\" : \"absolute\";\n\t\t\telement.parentNode.appendChild(container);\n\t\t}\n\t\treturn container;\n\t},\n\t_setMatrix = (m, a, b, c, d, e, f) => {\n\t\tm.a = a;\n\t\tm.b = b;\n\t\tm.c = c;\n\t\tm.d = d;\n\t\tm.e = e;\n\t\tm.f = f;\n\t\treturn m;\n\t};\n\nexport class Matrix2D {\n\tconstructor(a=1, b=0, c=0, d=1, e=0, f=0) {\n\t\t_setMatrix(this, a, b, c, d, e, f);\n\t}\n\n\tinverse() {\n\t\tlet {a, b, c, d, e, f} = this,\n\t\t\tdeterminant = (a * d - b * c);\n\t\treturn _setMatrix(\n\t\t\tthis,\n\t\t\td / determinant,\n\t\t\t-b / determinant,\n\t\t\t-c / determinant,\n\t\t\ta / determinant,\n\t\t\t(c * f - d * e) / determinant,\n\t\t\t-(a * f - b * e) / determinant\n\t\t);\n\t}\n\n\tmultiply(matrix) {\n\t\tlet {a, b, c, d, e, f} = this,\n\t\t\ta2 = matrix.a,\n\t\t\tb2 = matrix.c,\n\t\t\tc2 = matrix.b,\n\t\t\td2 = matrix.d,\n\t\t\te2 = matrix.e,\n\t\t\tf2 = matrix.f;\n\t\treturn _setMatrix(this,\n\t\t\ta2 * a + c2 * c,\n\t\t\ta2 * b + c2 * d,\n\t\t\tb2 * a + d2 * c,\n\t\t\tb2 * b + d2 * d,\n\t\t\te + e2 * a + f2 * c,\n\t\t\tf + e2 * b + f2 * d);\n\t}\n\n\tequals(matrix) {\n\t\tlet {a, b, c, d, e, f} = this;\n\t\treturn (a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f);\n\t}\n\n\tapply(point, decoratee={}) {\n\t\tlet {x, y} = point,\n\t\t\t{a, b, c, d, e, f} = this;\n\t\tdecoratee.x = x * a + y * c + e;\n\t\tdecoratee.y = x * b + y * d + f;\n\t\treturn decoratee;\n\t}\n\n}\n\n//feed in an element and it'll return a 2D matrix (optionally inverted) so that you can translate between coordinate spaces.\n// Inverting lets you translate a global point into a local coordinate space. No inverting lets you go the other way.\n// We needed this to work around various browser bugs, like Firefox doesn't accurately report getScreenCTM() when there\n// are transforms applied to ancestor elements.\n// The matrix math to convert any x/y coordinate is:\n//     tx = m.a * x + m.c * y + m.e\n//     ty = m.b * x + m.d * y + m.f\nexport function getGlobalMatrix(element, inverse) {\n\tif (!element || !element.parentNode) {\n\t\treturn new Matrix2D();\n\t}\n\tlet svg = _svgOwner(element),\n\t\ttemps = svg ? _svgTemps : _divTemps,\n\t\tcontainer = _placeSiblings(element),\n\t\tb1 = temps[0].getBoundingClientRect(),\n\t\tb2 = temps[1].getBoundingClientRect(),\n\t\tb3 = temps[2].getBoundingClientRect(),\n\t\tparent = container.parentNode,\n\t\tisFixed = _isFixed(element),\n\t\tm = new Matrix2D(\n\t\t\t(b2.left - b1.left) / 100,\n\t\t\t(b2.top - b1.top) / 100,\n\t\t\t(b3.left - b1.left) / 100,\n\t\t\t(b3.top - b1.top) / 100,\n\t\t\tb1.left + (isFixed ? 0 : _getDocScrollLeft()),\n\t\t\tb1.top + (isFixed ? 0 : _getDocScrollTop())\n\t\t);\n\tparent.removeChild(container);\n\treturn inverse ? m.inverse() : m;\n}\n","/*!\n * PathEditor 3.0.2\n * https://greensock.com\n *\n * Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport { stringToRawPath, rawPathToString, bezierToPoints, simplifyPoints, pointsToSegment, subdivideSegment, getClosestData, copyRawPath, transformRawPath } from \"./paths.js\";\nimport { getGlobalMatrix, Matrix2D } from \"./matrix.js\";\n\nlet _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_doc, _supportsPointer, _win, _body,\n\t_selectionColor = \"#4e7fff\",\n\t_minimumMovement = 1,\n\t_DEG2RAD = Math.PI / 180,\n\t_getTime = Date.now || (() => new Date().getTime()),\n\t_lastInteraction = 0,\n\t_isPressed = 0,\n\t_emptyFunc = () => 0,\n\t_interacted = () => _lastInteraction = _getTime(),\n\t_CTRL, _ALT, _SHIFT, _CMD,\n\t_recentlyAddedAnchor,\n\t_editingAxis = {}, //stores the x/y of the most recently-selected anchor point's x and y axis. We tap into this for snapping horizontally and vertically.\n\t_history = [],\n\t_point = {}, //reuse to minimize memory and maximize performance (mostly for snapping)\n\t_temp = [], //reuse this in places like getNormalizedSVG() to conserve memory\n\t_comma = \",\",\n\t_selectedPaths = [],\n\t_preventDefault = event => {\n\t\tif (event.preventDefault) {\n\t\t\tevent.preventDefault();\n\t\t\tif (event.preventManipulation) {\n\t\t\t\tevent.preventManipulation();  //for some Microsoft browsers\n\t\t\t}\n\t\t}\n\t},\n\t_createElement = type => _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type),\n\t_createSVG = (type, container, attributes) => {\n\t\tlet element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type),\n\t\t\treg = /([a-z])([A-Z])/g,\n\t\t\tp;\n\t\tattributes = attributes || {};\n\t\tattributes.class = attributes.class || \"path-editor\";\n\t\tfor (p in attributes) {\n\t\t\tif (element.style[p] !== undefined) {\n\t\t\t\telement.style[p] = attributes[p];\n\t\t\t} else {\n\t\t\t\telement.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t\t\t}\n\t\t}\n\t\tcontainer.appendChild(element);\n\t\treturn element;\n\t},\n\t_identityMatrixObject = {matrix:new Matrix2D()},\n\t_getConsolidatedMatrix = target => ((target.transform && target.transform.baseVal.consolidate()) || _identityMatrixObject).matrix,\n\t_getConcatenatedTransforms = target => {\n\t\tlet m = _getConsolidatedMatrix(target),\n\t\t\towner = target.ownerSVGElement;\n\t\twhile ((target = target.parentNode) && target.ownerSVGElement === owner) {\n\t\t\tm.multiply(_getConsolidatedMatrix(target));\n\t\t}\n\t\treturn \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + m.e + \",\" + m.f + \")\";\n\t},\n\t_addHistory = pathEditor => {\n\t\tlet selectedIndexes = [],\n\t\t\ta = pathEditor._selectedAnchors,\n\t\t\ti;\n\t\tfor (i = 0; i < a.length; i++) {\n\t\t\tselectedIndexes[i] = a[i].i;\n\t\t}\n\t\t_history.unshift({path:pathEditor, d:pathEditor.path.getAttribute(\"d\"), transform:pathEditor.path.getAttribute(\"transform\") || \"\", selectedIndexes:selectedIndexes});\n\t\tif (_history.length > 30) {\n\t\t\t_history.length = 30;\n\t\t}\n\t},\n\t_round = value =>  ~~(value * 1000 + (value < 0 ? -.5 : .5)) / 1000,\n\t_getSquarePathData = size => {\n\t\tsize = _round(size);\n\t\treturn [\"M-\" + size, -size, size, -size, size, size, -size, size + \"z\"].join(_comma);\n\t},\n\t_getCirclePathData = size => {\n\t\tlet circ = 0.552284749831,\n\t\t\trcirc = _round(size * circ);\n\t\tsize = _round(size);\n\t\treturn \"M\" + size + \",0C\" + [size, rcirc, rcirc, size, 0, size,  -rcirc, size, -size, rcirc, -size, 0, -size, -rcirc, -rcirc, -size, 0, -size, rcirc, -size, size, -rcirc, size, 0].join(_comma) + \"z\";\n\t},\n\t_checkDeselect = function(e) {\n\t\tif (!e.target._gsSelection && !_isPressed && _getTime() - _lastInteraction > 100) {\n\t\t\tlet i = _selectedPaths.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\t_selectedPaths[i].deselect();\n\t\t\t}\n\t\t\t_selectedPaths.length = 0;\n\t\t}\n\t},\n\t_tempDiv, _touchEventLookup,\n\t_isMultiTouching = 0,\n\t_addListener = (element, type, func, capture) => {\n\t\tif (element.addEventListener) {\n\t\t\tlet touchType = _touchEventLookup[type];\n\t\t\tcapture = capture || {passive:false};\n\t\t\telement.addEventListener(touchType || type, func, capture);\n\t\t\tif (touchType && type !== touchType && touchType.substr(0, 7) !== \"pointer\") { //some browsers actually support both, so must we. But pointer events cover all.\n\t\t\t\telement.addEventListener(type, func, capture);\n\t\t\t}\n\t\t} else if (element.attachEvent) {\n\t\t\telement.attachEvent(\"on\" + type, func);\n\t\t}\n\t},\n\t_removeListener = (element, type, func) => {\n\t\tif (element.removeEventListener) {\n\t\t\tlet touchType = _touchEventLookup[type];\n\t\t\telement.removeEventListener(touchType || type, func);\n\t\t\tif (touchType && type !== touchType && touchType.substr(0, 7) !== \"pointer\") {\n\t\t\t\telement.removeEventListener(type, func);\n\t\t\t}\n\t\t} else if (element.detachEvent) {\n\t\t\telement.detachEvent(\"on\" + type, func);\n\t\t}\n\t},\n\t_hasTouchID = (list, ID) => {\n\t\tlet i = list.length;\n\t\twhile (--i > -1) {\n\t\t\tif (list[i].identifier === ID) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_onMultiTouchDocumentEnd = e => {\n\t\t_isMultiTouching = (e.touches && _dragCount < e.touches.length);\n\t\t_removeListener(e.target, \"touchend\", _onMultiTouchDocumentEnd);\n\t},\n\t_onMultiTouchDocument = e => {\n\t\t_isMultiTouching = (e.touches && _dragCount < e.touches.length);\n\t\t_addListener(e.target, \"touchend\", _onMultiTouchDocumentEnd);\n\t},\n\t_bind = (func, scope) => e => func.call(scope, e),\n\t_callback = (type, self, param) => {\n\t\tlet callback = self.vars[type];\n\t\tif (callback) {\n\t\t\tcallback.call(self.vars.callbackScope || self, param || self);\n\t\t}\n\t\treturn self;\n\t},\n\t_copyElement,\n\t_resetSelection = () => {\n\t\t_copyElement.style.display = \"block\";\n\t\t_copyElement.select();\n\t\t_copyElement.style.display = \"none\";\n\t},\n\t_coreInitted,\n\t_initCore = () => {\n\t\t_doc = document;\n\t\t_win = window;\n\t\t_body = _doc.body;\n\t\t_tempDiv = _createElement(\"div\");\n\t\t_copyElement = _createElement(\"textarea\");\n\t\t_copyElement.style.display = \"none\";\n\t\t_body && _body.appendChild(_copyElement);\n\t\t_touchEventLookup = (function(types) { //we create an object that makes it easy to translate touch event types into their \"pointer\" counterparts if we're in a browser that uses those instead. Like IE10 uses \"MSPointerDown\" instead of \"touchstart\", for example.\n\t\t\tlet standard = types.split(\",\"),\n\t\t\t\tconverted = ((_tempDiv.onpointerdown !== undefined) ? \"pointerdown,pointermove,pointerup,pointercancel\" : (_tempDiv.onmspointerdown !== undefined) ? \"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel\" : types).split(\",\"),\n\t\t\t\tobj = {},\n\t\t\t\ti = 4;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj[standard[i]] = converted[i];\n\t\t\t\tobj[converted[i]] = standard[i];\n\t\t\t}\n\t\t\treturn obj;\n\t\t}(\"touchstart,touchmove,touchend,touchcancel\"));\n\t\tSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(e) { //adds Chrome support\n\t\t\treturn e.getScreenCTM().inverse().multiply(this.getScreenCTM());\n\t\t};\n\t\t_doc.addEventListener(\"keydown\", function(e) {\n\t\t\tlet key = e.keyCode || e.which,\n\t\t\t\tkeyString = e.key || key,\n\t\t\t\ti, state, a, path;\n\t\t\tif (keyString === \"Shift\" || key === 16) {\n\t\t\t\t_SHIFT = true;\n\t\t\t} else if (keyString === \"Control\" || key === 17) {\n\t\t\t\t_CTRL = true;\n\t\t\t} else if (keyString === \"Meta\" || key === 91) {\n\t\t\t\t_CMD = true;\n\t\t\t} else if (keyString === \"Alt\" || key === 18) {\n\t\t\t\t_ALT = true;\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._onPressAlt();\n\t\t\t\t}\n\t\t\t} else if ((keyString === \"z\" || key === 90) && (_CTRL || _CMD) && _history.length > 1) { //UNDO\n\t\t\t\t_history.shift();\n\t\t\t\tstate = _history[0];\n\t\t\t\tif (state) {\n\t\t\t\t\tpath = state.path;\n\t\t\t\t\tpath.path.setAttribute(\"d\", state.d);\n\t\t\t\t\tpath.path.setAttribute(\"transform\", state.transform);\n\t\t\t\t\tpath.init();\n\t\t\t\t\ta = path._anchors;\n\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\tif (state.selectedIndexes.indexOf(a[i].i) !== -1) {\n\t\t\t\t\t\t\tpath._selectedAnchors.push(a[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpath._updateAnchors();\n\t\t\t\t\tpath.update();\n\t\t\t\t\tif (path.vars.onUndo) {\n\t\t\t\t\t\tpath.vars.onUndo.call(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (keyString === \"Delete\" || keyString === \"Backspace\" || key === 8 || key === 46 || key === 63272 || (key === \"d\" && (_CTRL || _CMD))) { //DELETE\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._deleteSelectedAnchors();\n\t\t\t\t}\n\t\t\t} else if ((keyString === \"a\" || key === 65) && (_CMD || _CTRL)) { //SELECT ALL\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i].select(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}, true);\n\t\t_doc.addEventListener(\"keyup\", function(e) {\n\t\t\tlet key = e.key || e.keyCode || e.which;\n\t\t\tif (key === \"Shift\" || key === 16) {\n\t\t\t\t_SHIFT = false;\n\t\t\t} else if (key === \"Control\" || key === 17) {\n\t\t\t\t_CTRL = false;\n\t\t\t} else if (key === \"Meta\" || key === 91) {\n\t\t\t\t_CMD = false;\n\t\t\t} else if (key === \"Alt\" || key === 18) {\n\t\t\t\t_ALT = false;\n\t\t\t\tlet i = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._onReleaseAlt();\n\t\t\t\t}\n\t\t\t}\n\t\t}, true);\n\t\t_supportsPointer = !!_win.PointerEvent;\n\t\t_addListener(_doc, \"mouseup\", _checkDeselect);\n\t\t_addListener(_doc, \"touchend\", _checkDeselect);\n\t\t_addListener(_doc, \"touchcancel\", _emptyFunc); //some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document. Very strange indeed.\n\t\t_addListener(_win, \"touchmove\", _emptyFunc); //works around Safari bugs that still allow the page to scroll even when we preventDefault() on the touchmove event.\n\t\t_body && _body.addEventListener(\"touchstart\", _emptyFunc); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t_coreInitted = 1;\n\t},\n\t_onPress = function(e) {\n\t\tlet self = this,\n\t\t\tctm = getGlobalMatrix(self.target.parentNode, true), //previously used self.target.parentNode.getScreenCTM().inverse() but there's a major bug in Firefox that prevents it from working properly when there's an ancestor with a transform applied, so we bootstrapped our own solution that seems ot work great across all browsers.\n\t\t\ttouchEventTarget, temp;\n\t\tthis._matrix = this.target.transform.baseVal.getItem(0).matrix;\n\t\tthis._ctm = ctm;\n\t\tif (_touchEventLookup[e.type]) { //note: on iOS, BOTH touchmove and mousemove are dispatched, but the mousemove has pageY and pageX of 0 which would mess up the calculations and needlessly hurt performance.\n\t\t\ttouchEventTarget = (e.type.indexOf(\"touch\") !== -1) ? (e.currentTarget || e.target) : _doc; //pointer-based touches (for Microsoft browsers) don't remain locked to the original target like other browsers, so we must use the document instead. The event type would be \"MSPointerDown\" or \"pointerdown\".\n\t\t\t_addListener(touchEventTarget, \"touchend\", self._onRelease);\n\t\t\t_addListener(touchEventTarget, \"touchmove\", self._onMove);\n\t\t\t_addListener(touchEventTarget, \"touchcancel\", self._onRelease);\n\t\t\t_addListener(_doc, \"touchstart\", _onMultiTouchDocument);\n\t\t\t_addListener(_win, \"touchforcechange\", _preventDefault); //otherwise iOS will scroll when dragging.\n\t\t} else {\n\t\t\ttouchEventTarget = null;\n\t\t\t_addListener(_doc, \"mousemove\", self._onMove); //attach these to the document instead of the box itself so that if the user's mouse moves too quickly (and off of the box), things still work.\n\t\t}\n\t\tif (!_supportsPointer) {\n\t\t\t_addListener(_doc, \"mouseup\", self._onRelease);\n\t\t}\n\t\t_preventDefault(e);\n\t\t_resetSelection(); // when a PathEditor is in an iframe in an environment like codepen, this helps avoid situations where the DELETE key won't actually work because the parent frame is intercepting the event.\n\t\tif (e.changedTouches) { //touch events store the data slightly differently\n\t\t\te = self.touch = e.changedTouches[0];\n\t\t\tself.touchID = e.identifier;\n\t\t} else if (e.pointerId) {\n\t\t\tself.touchID = e.pointerId; //for some Microsoft browsers\n\t\t} else {\n\t\t\tself.touch = self.touchID = null;\n\t\t}\n\t\tself._startPointerY = self.pointerY = e.pageY; //record the starting x and y so that we can calculate the movement from the original in _onMouseMove\n\t\tself._startPointerX = self.pointerX = e.pageX;\n\t\tself._startElementX = self._matrix.e;\n\t\tself._startElementY = self._matrix.f;\n\n\t\tif (this._ctm.a === 1 && this._ctm.b === 0 && this._ctm.c === 0 && this._ctm.d === 1) {\n\t\t\tthis._ctm = null;\n\t\t} else {\n\t\t\ttemp = self._startPointerX * this._ctm.a + self._startPointerY * this._ctm.c + this._ctm.e;\n\t\t\tself._startPointerY = self._startPointerX * this._ctm.b + self._startPointerY * this._ctm.d + this._ctm.f;\n\t\t\tself._startPointerX = temp;\n\t\t}\n\n\t\tself.isPressed = _isPressed = true;\n\t\tself.touchEventTarget = touchEventTarget;\n\t\tif (self.vars.onPress) {\n\t\t\tself.vars.onPress.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t},\n\t_onMove = function(e) {\n\t\tlet self = this,\n\t\t\toriginalEvent = e,\n\t\t\ttouches, i;\n\t\tif (!self._enabled || _isMultiTouching || !self.isPressed || !e) {\n\t\t\treturn;\n\t\t}\n\t\tself.pointerEvent = e;\n\t\ttouches = e.changedTouches;\n\t\tif (touches) { //touch events store the data slightly differently\n\t\t\te = touches[0];\n\t\t\tif (e !== self.touch && e.identifier !== self.touchID) { //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)\n\t\t\t\ti = touches.length;\n\t\t\t\twhile (--i > -1 && (e = touches[i]).identifier !== self.touchID) {}\n\t\t\t\tif (i < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (e.pointerId && self.touchID && e.pointerId !== self.touchID) { //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)\n\t\t\treturn;\n\t\t}\n\t\t_preventDefault(originalEvent);\n\t\tself.setPointerPosition(e.pageX, e.pageY);\n\t\tif (self.vars.onDrag) {\n\t\t\tself.vars.onDrag.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t},\n\t_onRelease = function(e, force) {\n\t\tlet self = this;\n\t\tif (!self._enabled || !self.isPressed || (e && self.touchID != null && !force && ((e.pointerId && e.pointerId !== self.touchID) || (e.changedTouches && !_hasTouchID(e.changedTouches, self.touchID))))) {  //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)\n\t\t\treturn;\n\t\t}\n\t\t_interacted();\n\t\tself.isPressed = _isPressed = false; //TODO: if we want to accommodate multi-touch, we'd need to introduce a counter to track how many touches there are and only toggle this when they're all off.\n\t\tlet originalEvent = e,\n\t\t\twasDragging = self.isDragging,\n\t\t\ttouchEventTarget = self.touchEventTarget,\n\t\t\ttouches, i;\n\t\tif (touchEventTarget) {\n\t\t\t_removeListener(touchEventTarget, \"touchend\", self._onRelease);\n\t\t\t_removeListener(touchEventTarget, \"touchmove\", self._onMove);\n\t\t\t_removeListener(touchEventTarget, \"touchcancel\", self._onRelease);\n\t\t\t_removeListener(_doc, \"touchstart\", _onMultiTouchDocument);\n\t\t} else {\n\t\t\t_removeListener(_doc, \"mousemove\", self._onMove);\n\t\t}\n\t\tif (!_supportsPointer) {\n\t\t\t_removeListener(_doc, \"mouseup\", self._onRelease);\n\t\t\tif (e && e.target) {\n\t\t\t\t_removeListener(e.target, \"mouseup\", self._onRelease);\n\t\t\t}\n\t\t}\n\t\tif (wasDragging) {\n\t\t\tself.isDragging = false;\n\t\t} else if (self.vars.onClick) {\n\t\t\tself.vars.onClick.call(self.vars.callbackScope || self, originalEvent);\n\t\t}\n\t\tif (e) {\n\t\t\ttouches = e.changedTouches;\n\t\t\tif (touches) { //touch events store the data slightly differently\n\t\t\t\te = touches[0];\n\t\t\t\tif (e !== self.touch && e.identifier !== self.touchID) { //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)\n\t\t\t\t\ti = touches.length;\n\t\t\t\t\twhile (--i > -1 && (e = touches[i]).identifier !== self.touchID) {}\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.pointerEvent = originalEvent;\n\t\t\tself.pointerX = e.pageX;\n\t\t\tself.pointerY = e.pageY;\n\t\t}\n\t\tif (originalEvent && !wasDragging && self.vars.onDragRelease) {\n\t\t\tself.vars.onDragRelease.call(self, self.pointerEvent);\n\n\t\t} else {\n\t\t\tif (originalEvent) {\n\t\t\t\t_preventDefault(originalEvent);\n\t\t\t}\n\t\t\tif (self.vars.onRelease) {\n\t\t\t\tself.vars.onRelease.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t\t}\n\t\t}\n\t\tif (wasDragging && self.vars.onDragEnd) {\n\t\t\tself.vars.onDragEnd.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t\treturn true;\n\t},\n\t_createSegmentAnchors = (rawPath, j, editor, vars) => {\n\t\tlet segment = rawPath[j],\n\t\t\tl = segment.length,\n\t\t\ta = [],\n\t\t\ti;\n\t\tfor (i = 0; i < l; i+=6) {\n\t\t\ta.push(new Anchor(editor, rawPath, j, i, vars));\n\t\t}\n\t\treturn a;\n\t},\n\t_getLength = (segment, i, i2) => { //i is the starting index, and it'll return the length to the next x/y pair. So if you're looking for the length to handle1, you'd feed in the index of the handle control point x whereas if you're looking for the length to handle2, i would be the x of the anchor.\n\t\tlet x = segment[i2] - segment[i],\n\t\t\ty = segment[i2+1] - segment[i+1];\n\t\treturn Math.sqrt(x * x + y * y);\n\t};\n\n\nclass DraggableSVG {\n\n\tconstructor(target, vars) {\n\t\tthis.target = (typeof(target) === \"string\") ? _doc.querySelectorAll(target)[0] : target;\n\t\tthis.vars = vars || {};\n\t\tthis._onPress = _bind(_onPress, this);\n\t\tthis._onMove = _bind(_onMove, this);\n\t\tthis._onRelease = _bind(_onRelease, this);\n\t\tthis.target.setAttribute(\"transform\", (this.target.getAttribute(\"transform\") || \"\") + \" translate(0,0)\");\n\t\tthis._matrix = _getConsolidatedMatrix(this.target);\n\t\tthis.x = this._matrix.e;\n\t\tthis.y = this._matrix.f;\n\t\tthis.snap = vars.snap;\n\t\tif (!isNaN(vars.maxX) || !isNaN(vars.minX)) {\n\t\t\tthis._bounds = 1;\n\t\t\tthis.maxX = +vars.maxX;\n\t\t\tthis.minX = +vars.minX;\n\t\t} else {\n\t\t\tthis._bounds = 0;\n\t\t}\n\t\tthis.enabled(true);\n\t}\n\n\tsetPointerPosition(pointerX, pointerY) {\n\t\tlet rnd = 1000,\n\t\t\txChange, yChange, x, y, temp;\n\t\tthis.pointerX = pointerX;\n\t\tthis.pointerY = pointerY;\n\t\tif (this._ctm) {\n\t\t\ttemp = pointerX * this._ctm.a + pointerY * this._ctm.c + this._ctm.e;\n\t\t\tpointerY = pointerX * this._ctm.b + pointerY * this._ctm.d + this._ctm.f;\n\t\t\tpointerX = temp;\n\t\t}\n\t\tyChange = (pointerY - this._startPointerY);\n\t\txChange = (pointerX - this._startPointerX);\n\t\tif (yChange < _minimumMovement && yChange > -_minimumMovement) {\n\t\t\tyChange = 0;\n\t\t}\n\t\tif (xChange < _minimumMovement && xChange > -_minimumMovement) {\n\t\t\txChange = 0;\n\t\t}\n\t\tx = (((this._startElementX + xChange) * rnd) | 0) / rnd;\n\t\ty = (((this._startElementY + yChange) * rnd) | 0) / rnd;\n\t\tif (this.snap && !_SHIFT) {\n\t\t\t_point.x = x;\n\t\t\t_point.y = y;\n\t\t\tthis.snap.call(this, _point);\n\t\t\tx = _point.x;\n\t\t\ty = _point.y;\n\t\t}\n\t\tif (this.x !== x || this.y !== y) {\n\t\t\tthis._matrix.f = this.y = y;\n\t\t\tthis._matrix.e = this.x = x;\n\t\t\tif (!this.isDragging && this.isPressed) {\n\t\t\t\tthis.isDragging = true;\n\t\t\t\t_callback(\"onDragStart\", this, this.pointerEvent);\n\t\t\t}\n\t\t}\n\t}\n\n\tenabled(enabled) {\n\t\tif (!arguments.length) {\n\t\t\treturn this._enabled;\n\t\t}\n\t\tlet dragging;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\tif (!_supportsPointer) {\n\t\t\t\t_addListener(this.target, \"mousedown\", this._onPress);\n\t\t\t}\n\t\t\t_addListener(this.target, \"touchstart\", this._onPress);\n\t\t\t_addListener(this.target, \"click\", this._onClick, true); //note: used to pass true for capture but it prevented click-to-play-video functionality in Firefox.\n\t\t} else {\n\t\t\tdragging = this.isDragging;\n\t\t\t_removeListener(this.target, \"mousedown\", this._onPress);\n\t\t\t_removeListener(this.target, \"touchstart\", this._onPress);\n\t\t\t_removeListener(_win, \"touchforcechange\", _preventDefault);\n\t\t\t_removeListener(this.target, \"click\", this._onClick);\n\t\t\tif (this.touchEventTarget) {\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchcancel\", this._onRelease);\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchend\", this._onRelease);\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchmove\", this._onMove);\n\t\t\t}\n\t\t\t_removeListener(_doc, \"mouseup\", this._onRelease);\n\t\t\t_removeListener(_doc, \"mousemove\", this._onMove);\n\t\t\tthis.isDragging = this.isPressed = false;\n\t\t\tif (dragging) {\n\t\t\t\t_callback(\"onDragEnd\", this, this.pointerEvent);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tendDrag(e) {\n\t\tthis._onRelease(e);\n\t}\n\n}\n\n\n\n\n\nclass Anchor {\n\n\tconstructor(editor, rawPath, j, i, vars) {\n\t\tthis.editor = editor;\n\t\tthis.element = _createSVG(\"path\", editor._selection, {fill:_selectionColor, stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis.update(rawPath, j, i);\n\t\tthis.element._gsSelection = true;\n\t\tthis.vars = vars || {};\n\t\tthis._draggable = new DraggableSVG(this.element, {callbackScope:this, onDrag:this.onDrag, snap:this.vars.snap, onPress:this.onPress, onRelease:this.onRelease, onClick:this.onClick, onDragEnd:this.onDragEnd});\n\t}\n\n\tonPress() {\n\t\t_callback(\"onPress\", this);\n\t}\n\n\tonClick() {\n\t\t_callback(\"onClick\", this);\n\t}\n\n\tonDrag() {\n\t\tlet s = this.segment;\n\t\tthis.vars.onDrag.call(this.vars.callbackScope || this, this, this._draggable.x - s[this.i], this._draggable.y - s[this.i+1]);\n\t}\n\n\tonDragEnd() {\n\t\t_callback(\"onDragEnd\", this);\n\t}\n\n\tonRelease() {\n\t\t_callback(\"onRelease\", this);\n\t}\n\n\tupdate(rawPath, j, i) {\n\t\tif (rawPath) {\n\t\t\tthis.rawPath = rawPath;\n\t\t}\n\t\tif (arguments.length <= 1) {\n\t\t\tj = this.j;\n\t\t\ti = this.i;\n\t\t} else {\n\t\t\tthis.j = j;\n\t\t\tthis.i = i;\n\t\t}\n\t\tlet prevSmooth = this.smooth,\n\t\t\tsegment = this.rawPath[j];\n\t\tthis.segment = segment;\n\t\tthis.smooth = (i && i < segment.length - 2 && Math.abs(Math.atan2(segment[i+1] - segment[i-1], segment[i] - segment[i-2]) - Math.atan2(segment[i+3] - segment[i+1], segment[i+2] - segment[i])) < 0.09) ? 2 : 0; //0: corner, 1: smooth but not mirrored, 2: smooth and mirrored.\n\t\tif (this.smooth !== prevSmooth) {\n\t\t\tthis.element.setAttribute(\"d\", this.smooth ? this.editor._circleHandle : this.editor._squareHandle);\n\t\t}\n\t\tthis.element.setAttribute(\"transform\", \"translate(\" + segment[i] + \",\" + segment[i+1] + \")\");\n\t}\n}\n\n\n\n\nexport class PathEditor {\n\n\tconstructor(target, vars) {\n\t\tvars = vars || {};\n\t\tif (!_coreInitted) {\n\t\t\t_initCore();\n\t\t}\n\t\tthis.vars = vars;\n\t\tthis.path = (typeof(target) === \"string\") ? _doc.querySelectorAll(target)[0] : target;\n\t\tthis._g = _createSVG(\"g\", this.path.ownerSVGElement, {class:\"path-editor-g path-editor\"});\n\t\tthis._selectionHittest = _createSVG(\"path\", this._g, {stroke:\"transparent\", strokeWidth:16, fill:\"none\", vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._selection = vars._selection || _createSVG(\"g\", this._g, {class:\"path-editor-selection path-editor\"});\n\t\tthis._selectionPath = _createSVG(\"path\", this._selection, {stroke:_selectionColor, strokeWidth:2, fill:\"none\", vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._selectedAnchors = [];\n\t\tthis._line1 = _createSVG(\"polyline\", this._selection, {stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._line2 = _createSVG(\"polyline\", this._selection, {stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._line1.style.pointerEvents = this._line2.style.pointerEvents = this._selectionPath.style.pointerEvents = \"none\";\n\t\tthis._enabled = true;\n\t\tlet ctm = this.path.parentNode.getScreenCTM().inverse(),\n\t\t\tsize = (ctm.a + ctm.d) / 2 * (vars.handleSize || 5);\n\t\tthis._squareHandle = _getSquarePathData(size);\n\t\tthis._circleHandle = _getCirclePathData(size * 1.15);\n\t\tthis._handle1 = _createSVG(\"path\", this._selection, {d:this._squareHandle, fill:_selectionColor, stroke:\"transparent\", strokeWidth:6});\n\t\tthis._handle2 = _createSVG(\"path\", this._selection, {d:this._squareHandle, fill:_selectionColor, stroke:\"transparent\", strokeWidth:6});\n\t\tthis._handle1._draggable = new DraggableSVG(this._handle1, {onDrag:this._onDragHandle1, callbackScope:this, onPress:this._onPressHandle1, onRelease:this._onReleaseHandle, onClick:this._onClickHandle1, snap:vars.handleSnap});\n\t\tthis._handle2._draggable = new DraggableSVG(this._handle2, {onDrag:this._onDragHandle2, callbackScope:this, onPress:this._onPressHandle2, onRelease:this._onReleaseHandle, onClick:this._onClickHandle2, snap:vars.handleSnap});\n\t\tthis._handle1.style.visibility = this._handle2.style.visibility = \"hidden\";\n\t\tlet selectionItems = [this._handle1, this._handle2, this._line1, this._line2, this._selection, this._selectionPath, this._selectionHittest],\n\t\t\ti = selectionItems.length;\n\t\twhile (--i > -1) {\n\t\t\tselectionItems[i]._gsSelection = true; //just a flag we can check in the _checkDeselect() method to detect clicks on things that are selection-related.\n\t\t}\n\t\tif (vars.draggable !== false) {\n\t\t\tthis._draggable = new DraggableSVG(this._selectionHittest, {callbackScope:this, onPress:this.select, onRelease:this._onRelease, onDrag:this._onDragPath, onDragEnd:this._saveState, maxX:this.vars.maxX, minX:this.vars.minX});\n\t\t}\n\t\tthis.init();\n\t\tthis._selection.style.visibility = (vars.selected === false) ? \"hidden\" : \"visible\";\n\t\tif (vars.selected !== false) {\n\t\t\tthis.path._gsSelection = true;\n\t\t\t_selectedPaths.push(this);\n\t\t}\n\t\tthis._saveState();\n\t\tif (!_supportsPointer) {\n\t\t\t_addListener(this._selectionHittest, \"mousedown\", _bind(this._onClickSelectionPath, this));\n\t\t\t_addListener(this._selectionHittest, \"mouseup\", _bind(this._onRelease, this));\n\t\t}\n\t\t_addListener(this._selectionHittest, \"touchstart\", _bind(this._onClickSelectionPath, this));\n\t\t_addListener(this._selectionHittest, \"touchend\", _bind(this._onRelease, this));\n\t}\n\n\t_onRelease(e) {\n\t\tlet anchor = this._editingAnchor;\n\t\tif (anchor) {\n\t\t\t_editingAxis.x = anchor.segment[anchor.i];\n\t\t\t_editingAxis.y = anchor.segment[anchor.i+1];\n\t\t}\n\t\t_removeListener(_win, \"touchforcechange\", _preventDefault); //otherwise iOS will scroll when dragging.\n\t\t_callback(\"onRelease\", this, e);\n\t}\n\n\tinit() {\n\t\tlet pathData = this.path.getAttribute(\"d\"),\n\t\t\trawPath = stringToRawPath(pathData),\n\t\t\ttransform = this.path.getAttribute(\"transform\") || \"translate(0,0)\",\n\t\t\tcreateAnchors = (!this._rawPath || rawPath.totalPoints !== this._rawPath.totalPoints || rawPath.length !== this._rawPath.length),\n\t\t\tanchorVars = {callbackScope:this, snap:this.vars.anchorSnap, onDrag:this._onDragAnchor, onPress:this._onPressAnchor, onRelease:this._onRelease, onClick:this._onClickAnchor, onDragEnd:this._onDragEndAnchor, maxX:this.vars.maxX, minX:this.vars.minX},\n\t\t\tl, i;\n\n\t\tif (createAnchors && this._anchors && this._anchors.length) {\n\t\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\t\tthis._anchors[i].element.parentNode.removeChild(this._anchors[i].element);\n\t\t\t\tthis._anchors[i]._draggable.enabled(false);\n\t\t\t}\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t}\n\t\tthis._rawPath = rawPath;\n\t\tif (createAnchors) {\n\t\t\tthis._anchors = _createSegmentAnchors(rawPath, 0, this, anchorVars);\n\t\t\tl = rawPath.length;\n\t\t\tif (l > 1) {\n\t\t\t\tfor (i = 1; i < l; i++) {\n\t\t\t\t\tthis._anchors = this._anchors.concat(_createSegmentAnchors(rawPath, i, this, anchorVars));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ti = this._anchors.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tthis._anchors[i].update(rawPath);\n\t\t\t}\n\t\t}\n\n\t\tthis._selection.appendChild(this._handle1); //for stacking order (handles should always be on top)\n\t\tthis._selection.appendChild(this._handle2);\n\t\t//\t\tthis._selectedAnchors.length = 0;\n\t\tthis._selectionPath.setAttribute(\"d\", pathData);\n\t\tthis._selectionHittest.setAttribute(\"d\", pathData);\n\t\tthis._g.setAttribute(\"transform\", _getConcatenatedTransforms(this.path.parentNode) || \"translate(0,0)\");\n\t\tthis._selection.setAttribute(\"transform\", transform);\n\t\tthis._selectionHittest.setAttribute(\"transform\", transform);\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\t_saveState() {\n\t\t_addHistory(this);\n\t}\n\n\t_onClickSelectionPath(e) {\n\t\tif (this._selection.style.visibility === \"hidden\") {\n\t\t\tthis.select();\n\t\t} else if (_ALT || (e && e.altKey)) {\n\t\t\tlet anchorVars = {callbackScope:this, snap:this.vars.anchorSnap, onDrag:this._onDragAnchor, onPress:this._onPressAnchor, onRelease:this._onRelease, onClick:this._onClickAnchor, onDragEnd:this._onDragEndAnchor, maxX:this.vars.maxX, minX:this.vars.minX},\n\t\t\t\tctm = this._selection.getScreenCTM().inverse(),\n\t\t\t\tnewIndex, i, anchor, x, y, closestData;\n\t\t\tif (this._draggable) {\n\t\t\t\tthis._draggable._onRelease(e); //otherwise, ALT-click/dragging on a path would create a new anchor AND drag the entire path.\n\t\t\t}\n\t\t\tif (ctm) {\n\t\t\t\tx = e.clientX * ctm.a + e.clientY * ctm.c + ctm.e;\n\t\t\t\ty = e.clientX * ctm.b + e.clientY * ctm.d + ctm.f;\n\t\t\t}\n\t\t\t//DEBUG: _createSVG(\"circle\", this._selection, {fill:\"red\", r:5, cx:x, cy:y});\n\t\t\tclosestData = getClosestData(this._rawPath, x, y);\n\t\t\tsubdivideSegment(this._rawPath[closestData.j], closestData.i, closestData.t);\n\t\t\tnewIndex = closestData.i + 6;\n\t\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\t\tif (this._anchors[i].i >= newIndex) {\n\t\t\t\t\tthis._anchors[i].i += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\tanchor = new Anchor(this, this._rawPath, closestData.j, newIndex, anchorVars);\n\t\t\tthis._selection.appendChild(this._handle1); //for stacking order (handles should always be on top)\n\t\t\tthis._selection.appendChild(this._handle2);\n\t\t\tanchor._draggable._onPress(e);\n\t\t\t_recentlyAddedAnchor = anchor;\n\t\t\tthis._anchors.push(anchor);\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t\tthis._updateAnchors();\n\t\t\tthis.update();\n\t\t\tthis._saveState();\n\t\t}\n\t\t_resetSelection();\n\t\t_addListener(_win, \"touchforcechange\", _preventDefault); //otherwise iOS will scroll when dragging.\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onClickHandle1() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ti = anchor.i,\n\t\t\ts = anchor.segment;\n\t\tif (_ALT && Math.abs(s[i] - s[i-2]) < 5 && Math.abs(s[i+1] - s[i-1]) < 5) {\n\t\t\tthis._onClickAnchor(anchor);\n\t\t}\n\t}\n\n\t_onClickHandle2() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ti = anchor.i,\n\t\t\ts = anchor.segment;\n\t\tif (_ALT && Math.abs(s[i] - s[i+2]) < 5 && Math.abs(s[i+1] - s[i+3]) < 5) {\n\t\t\tthis._onClickAnchor(anchor);\n\t\t}\n\t}\n\n\t_onDragEndAnchor(e) {\n\t\t_recentlyAddedAnchor = null;\n\t\tthis._saveState();\n\t}\n\n\tisSelected() {\n\t\treturn (this._selectedAnchors.length > 0);\n\t}\n\n\tselect(allAnchors) {\n\t\tthis._selection.style.visibility = \"visible\";\n\t\tthis._editingAnchor = null;\n\t\tthis.path._gsSelection = true;\n\t\tif (allAnchors === true) {\n\t\t\tlet i = this._anchors.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tthis._selectedAnchors[i] = this._anchors[i];\n\t\t\t}\n\t\t}\n\t\tif (_selectedPaths.indexOf(this) === -1) {\n\t\t\t_selectedPaths.push(this);\n\t\t}\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\tdeselect() {\n\t\tthis._selection.style.visibility = \"hidden\";\n\t\tthis._selectedAnchors.length = 0;\n\t\tthis._editingAnchor = null;\n\t\tthis.path._gsSelection = false;\n\t\t_selectedPaths.splice(_selectedPaths.indexOf(this), 1);\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\t_onDragPath(e) {\n\t\tlet transform = this._selectionHittest.getAttribute(\"transform\") || \"translate(0,0)\";\n\t\tthis._selection.setAttribute(\"transform\", transform);\n\t\tthis.path.setAttribute(\"transform\", transform);\n\t}\n\n\t_onPressAnchor(anchor) {\n\t\tif (this._selectedAnchors.indexOf(anchor) === -1) { //if it isn't already selected...\n\t\t\tif (!_SHIFT) {\n\t\t\t\tthis._selectedAnchors.length = 0;\n\t\t\t}\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t} else if (_SHIFT) {\n\t\t\tthis._selectedAnchors.splice(this._selectedAnchors.indexOf(anchor), 1);\n\t\t\tanchor._draggable.endDrag();\n\t\t}\n\t\t_editingAxis.x = anchor.segment[anchor.i];\n\t\t_editingAxis.y = anchor.segment[anchor.i+1];\n\t\tthis._updateAnchors();\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_deleteSelectedAnchors() {\n\t\tlet anchors = this._selectedAnchors,\n\t\t\ti = anchors.length,\n\t\t\tanchor, index, j;\n\t\twhile (--i > -1) {\n\t\t\tanchor = anchors[i];\n\t\t\tanchor.element.parentNode.removeChild(anchor.element);\n\t\t\tanchor._draggable.enabled(false);\n\t\t\tindex = anchor.i;\n\t\t\tif (!index) { //first\n\t\t\t\tanchor.segment.splice(index, 6);\n\t\t\t} else if (index < anchor.segment.length - 2) {\n\t\t\t\tanchor.segment.splice(index-2, 6);\n\t\t\t} else { //last\n\t\t\t\tanchor.segment.splice(index-4, 6);\n\t\t\t}\n\t\t\tanchors.splice(i, 1);\n\t\t\tthis._anchors.splice(this._anchors.indexOf(anchor), 1);\n\t\t\tfor (j = 0; j < this._anchors.length; j++) {\n\t\t\t\tif (this._anchors[j].i >= index) {\n\t\t\t\t\tthis._anchors[j].i -= 6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updateAnchors();\n\t\tthis.update();\n\t\tthis._saveState();\n\t\tif (this.vars.onDeleteAnchor) {\n\t\t\tthis.vars.onDeleteAnchor.call(this.vars.callbackScope || this);\n\t\t}\n\t}\n\n\t_onClickAnchor(anchor) {\n\t\tlet i = anchor.i,\n\t\t\tsegment = anchor.segment,\n\t\t\trnd = 1000,\n\t\t\tisEnd = (!i || i >= segment.length - 2),\n\t\t\tangle1, angle2, length1, length2, sin, cos;\n\t\tif (_ALT && _recentlyAddedAnchor !== anchor && this._editingAnchor) {\n\t\t\tanchor.smooth = !anchor.smooth;\n\t\t\tif (isEnd) { //the very ends can't be \"smooth\"\n\t\t\t\tanchor.smooth = false;\n\t\t\t}\n\t\t\tanchor.element.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t\tif (anchor.smooth && !isEnd) {\n\t\t\t\tangle1 = Math.atan2(segment[i+1] - segment[i-1], segment[i] - segment[i-2]);\n\t\t\t\tangle2 = Math.atan2(segment[i+3] - segment[i+1], segment[i+2] - segment[i]);\n\t\t\t\tangle1 = (angle1 + angle2) / 2;\n\t\t\t\tlength1 = _getLength(segment, i-2, i);\n\t\t\t\tlength2 = _getLength(segment, i, i+2);\n\t\t\t\tif (length1 < 0.2) {\n\t\t\t\t\tlength1 = (_getLength(segment, i, i-6) / 4);\n\t\t\t\t\tangle1 = angle2 || Math.atan2(segment[i+7] - segment[i-5], segment[i+6] - segment[i-6]);\n\t\t\t\t}\n\t\t\t\tif (length2 < 0.2) {\n\t\t\t\t\tlength2 = (_getLength(segment, i, i+6) / 4);\n\t\t\t\t\tangle2 = angle1 || Math.atan2(segment[i+7] - segment[i-5], segment[i+6] - segment[i-6]);\n\t\t\t\t}\n\t\t\t\tsin = Math.sin(angle1);\n\t\t\t\tcos = Math.cos(angle1);\n\t\t\t\tif (Math.abs(angle2 - angle1) < Math.PI / 2) {\n\t\t\t\t\tsin = -sin;\n\t\t\t\t\tcos = -cos;\n\t\t\t\t}\n\t\t\t\tsegment[i-2] = (((segment[i] + cos * length1) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i-1] = (((segment[i+1] + sin * length1) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i+2] = (((segment[i] - cos * length2) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i+3] = (((segment[i+1] - sin * length2) * rnd) | 0) / rnd;\n\t\t\t\tthis._updateAnchors();\n\t\t\t\tthis.update();\n\t\t\t\tthis._saveState();\n\t\t\t} else if (!anchor.smooth && !isEnd) {\n\t\t\t\tif (i) {\n\t\t\t\t\tsegment[i-2] = segment[i];\n\t\t\t\t\tsegment[i-1] = segment[i+1];\n\t\t\t\t}\n\t\t\t\tif (i < segment.length - 2) {\n\t\t\t\t\tsegment[i+2] = segment[i];\n\t\t\t\t\tsegment[i+3] = segment[i+1];\n\t\t\t\t}\n\t\t\t\tthis._updateAnchors();\n\t\t\t\tthis.update();\n\t\t\t\tthis._saveState();\n\t\t\t}\n\t\t} else if (!_SHIFT) {\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t}\n\t\t_recentlyAddedAnchor = null;\n\t\tthis._updateAnchors();\n\t}\n\n\t_updateAnchors() {\n\t\tlet anchor = (this._selectedAnchors.length === 1) ? this._selectedAnchors[0] : null,\n\t\t\tsegment = anchor ? anchor.segment : null,\n\t\t\ti, x, y;\n\t\tthis._editingAnchor = anchor;\n\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\tthis._anchors[i].element.style.fill = (this._selectedAnchors.indexOf(this._anchors[i]) !== -1) ? _selectionColor : \"white\";\n\t\t\t//this._anchors[i].element.setAttribute(\"fill\", (this._selectedAnchors.indexOf(this._anchors[i]) !== -1) ? _selectionColor : \"white\");\n\t\t}\n\t\tif (anchor) {\n\t\t\tthis._handle1.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t\tthis._handle2.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t}\n\t\ti = anchor ? anchor.i : 0;\n\t\tif (anchor && i) {\n\t\t\tx = segment[i-2];\n\t\t\ty = segment[i-1]; //TODO: if they equal the anchor coordinates, just hide it.\n\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = (!_ALT && x === segment[i] && y === segment[i+1]) ? \"hidden\" : \"visible\";\n\t\t\tthis._handle1.setAttribute(\"transform\", \"translate(\" + x + _comma + y + \")\");\n\t\t\tthis._line1.setAttribute(\"points\",  x + _comma + y + _comma + segment[i] + _comma + segment[i+1]);\n\t\t} else {\n\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"hidden\";\n\t\t}\n\t\tif (anchor && i < segment.length - 2) {\n\t\t\tx = segment[i+2];\n\t\t\ty = segment[i+3];\n\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = (!_ALT && x === segment[i] && y === segment[i+1]) ? \"hidden\" : \"visible\";\n\t\t\tthis._handle2.setAttribute(\"transform\", \"translate(\" + x + _comma + y + \")\");\n\t\t\tthis._line2.setAttribute(\"points\",  segment[i] + _comma + segment[i+1] + _comma + x + _comma + y);\n\n\t\t} else {\n\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"hidden\";\n\t\t}\n\t}\n\n\t_onPressAlt() {\n\t\tlet anchor = this._editingAnchor;\n\t\tif (anchor) {\n\t\t\tif (anchor.i) {\n\t\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"visible\";\n\t\t\t}\n\t\t\tif (anchor.i < anchor.segment.length - 2) {\n\t\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"visible\";\n\t\t\t}\n\t\t}\n\t}\n\n\t_onReleaseAlt() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts, i;\n\t\tif (anchor) {\n\t\t\ts = anchor.segment;\n\t\t\ti = anchor.i;\n\t\t\tif (s[i] === s[i-2] && s[i+1] === s[i-1]) {\n\t\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"hidden\";\n\t\t\t}\n\t\t\tif (s[i] === s[i+2] && s[i+1] === s[i+3]) {\n\t\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\t}\n\n\t_onPressHandle1() {\n\t\tif (this._editingAnchor.smooth) {\n\t\t\tthis._oppositeHandleLength = _getLength(this._editingAnchor.segment, this._editingAnchor.i, this._editingAnchor.i+2);\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onPressHandle2() {\n\t\tif (this._editingAnchor.smooth) {\n\t\t\tthis._oppositeHandleLength = _getLength(this._editingAnchor.segment, this._editingAnchor.i-2, this._editingAnchor.i);\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onReleaseHandle(e) {\n\t\tthis._onRelease(e);\n\t\tthis._saveState();\n\t}\n\n\t_onDragHandle1() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts = anchor.segment,\n\t\t\ti = anchor.i,\n\t\t\trnd = 1000,\n\t\t\tx = this._handle1._draggable.x,\n\t\t\ty = this._handle1._draggable.y,\n\t\t\tangle;\n\t\ts[i-2] = x = ((x * rnd) | 0) / rnd;\n\t\ts[i-1] = y = ((y * rnd) | 0) / rnd;\n\t\tif (anchor.smooth) {\n\t\t\tif (_ALT) {\n\t\t\t\tanchor.smooth = false;\n\t\t\t\tanchor.element.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle1.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle2.setAttribute(\"d\", this._squareHandle);\n\t\t\t} else {\n\t\t\t\tangle = Math.atan2(s[i+1] - y, s[i] - x);\n\t\t\t\tx = this._oppositeHandleLength * Math.cos(angle);\n\t\t\t\ty = this._oppositeHandleLength * Math.sin(angle);\n\t\t\t\ts[i+2] = (((s[i] + x) * rnd) | 0) / rnd;\n\t\t\t\ts[i+3] = (((s[i+1] + y) * rnd) | 0) / rnd;\n\t\t\t}\n\n\t\t}\n\t\tthis.update();\n\t}\n\n\t_onDragHandle2() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts = anchor.segment,\n\t\t\ti = anchor.i,\n\t\t\trnd = 1000,\n\t\t\tx = this._handle2._draggable.x,\n\t\t\ty = this._handle2._draggable.y,\n\t\t\tangle;\n\t\ts[i+2] = x = ((x * rnd) | 0) / rnd;\n\t\ts[i+3] = y = ((y * rnd) | 0) / rnd;\n\t\tif (anchor.smooth) {\n\t\t\tif (_ALT) {\n\t\t\t\tanchor.smooth = false;\n\t\t\t\tanchor.element.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle1.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle2.setAttribute(\"d\", this._squareHandle);\n\t\t\t} else {\n\t\t\t\tangle = Math.atan2(s[i+1] - y, s[i] - x);\n\t\t\t\tx = this._oppositeHandleLength * Math.cos(angle);\n\t\t\t\ty = this._oppositeHandleLength * Math.sin(angle);\n\t\t\t\ts[i-2] = (((s[i] + x) * rnd) | 0) / rnd;\n\t\t\t\ts[i-1] = (((s[i+1] + y) * rnd) | 0) / rnd;\n\t\t\t}\n\n\t\t}\n\t\tthis.update();\n\t}\n\n\t_onDragAnchor(anchor, changeX, changeY) {\n\t\tlet anchors = this._selectedAnchors,\n\t\t\tl = anchors.length,\n\t\t\trnd = 1000,\n\t\t\ti, j, s, a;\n\t\tfor (j = 0; j < l; j++) {\n\t\t\ta = anchors[j];\n\t\t\ti = a.i;\n\t\t\ts = a.segment;\n\t\t\tif (i) {\n\t\t\t\ts[i-2] = (((s[i-2] + changeX) * rnd) | 0) / rnd;\n\t\t\t\ts[i-1] = (((s[i-1] + changeY) * rnd) | 0) / rnd;\n\t\t\t}\n\t\t\ts[i] = (((s[i] + changeX) * rnd) | 0) / rnd;\n\t\t\ts[i+1] = (((s[i+1] + changeY) * rnd) | 0) / rnd;\n\t\t\tif (i < s.length - 2) {\n\t\t\t\ts[i+2] = (((s[i+2] + changeX) * rnd) | 0) / rnd;\n\t\t\t\ts[i+3] = (((s[i+3] + changeY) * rnd) | 0) / rnd;\n\t\t\t}\n\t\t\tif (a !== anchor) {\n\t\t\t\ta.element.setAttribute(\"transform\", \"translate(\" + (s[i]) + _comma + (s[i+1]) + \")\");\n\t\t\t}\n\t\t}\n\t\tthis.update();\n\t}\n\n\tenabled(enabled) {\n\t\tif (!arguments.length) {\n\t\t\treturn this._enabled;\n\t\t}\n\t\tlet i = this._anchors.length;\n\t\twhile (--i > -1) {\n\t\t\tthis._anchors[i]._draggable.enabled(enabled);\n\t\t}\n\t\tthis._enabled = enabled;\n\t\tthis._handle1._draggable.enabled(enabled);\n\t\tthis._handle2._draggable.enabled(enabled);\n\t\tif (this._draggable) {\n\t\t\tthis._draggable.enabled(enabled);\n\t\t}\n\t\tif (!enabled) {\n\t\t\tthis.deselect();\n\t\t\tthis.path.ownerSVGElement.removeChild(this._selectionHittest);\n\t\t\tthis.path.ownerSVGElement.removeChild(this._selection);\n\t\t} else if (!this._selection.parentNode) {\n\t\t\tthis.path.ownerSVGElement.appendChild(this._selectionHittest);\n\t\t\tthis.path.ownerSVGElement.appendChild(this._selection);\n\t\t\tthis.init();\n\t\t\tthis._saveState();\n\t\t}\n\t\tthis._updateAnchors();\n\t\treturn this.update();\n\t}\n\n\tupdate(readPath) {\n\t\tlet d = \"\",\n\t\t\tanchor = this._editingAnchor,\n\t\t\ti, s, x, y;\n\t\tif (readPath) {\n\t\t\tthis.init();\n\t\t}\n\t\tif (anchor) {\n\t\t\ti = anchor.i;\n\t\t\ts = anchor.segment;\n\t\t\tif (i) {\n\t\t\t\tx = s[i-2];\n\t\t\t\ty = s[i-1];\n\t\t\t\tthis._handle1.setAttribute(\"transform\", \"translate(\" + (x) + _comma + (y) + \")\");\n\t\t\t\tthis._line1.setAttribute(\"points\", x + _comma + y + _comma + s[i] + _comma + s[i+1]);\n\t\t\t}\n\t\t\tif (i < s.length - 2) {\n\t\t\t\tx = s[i+2];\n\t\t\t\ty = s[i+3];\n\t\t\t\tthis._handle2.setAttribute(\"transform\", \"translate(\" + (x) + _comma + (y) + \")\");\n\t\t\t\tthis._line2.setAttribute(\"points\", s[i] + _comma + s[i+1] + _comma + x + _comma + y);\n\t\t\t}\n\t\t}\n\n\t\tif (readPath) {\n\t\t\td = this.path.getAttribute(\"d\");\n\t\t} else {\n\t\t\tfor (i = 0; i < this._rawPath.length; i++) {\n\t\t\t\ts = this._rawPath[i];\n\t\t\t\tif (s.length > 7) {\n\t\t\t\t\td += \"M\" + s[0] + _comma + s[1] + \"C\" + s.slice(2).join(_comma);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.path.setAttribute(\"d\", d);\n\t\t\tthis._selectionPath.setAttribute(\"d\", d);\n\t\t\tthis._selectionHittest.setAttribute(\"d\", d);\n\t\t}\n\n\t\tif (this.vars.onUpdate && this._enabled) {\n\t\t\t_callback(\"onUpdate\", this, d);\n\t\t}\n\t\treturn this;\n\t}\n\n\tgetRawPath(applyTransforms, offsetX, offsetY) {\n\t\tif (applyTransforms) {\n\t\t\tlet m = _getConsolidatedMatrix(this.path);\n\t\t\treturn transformRawPath(copyRawPath(this._rawPath), 1, 0, 0, 1, m.e + (offsetX || 0), m.f + (offsetY || 0));\n\t\t}\n\t\treturn this._rawPath;\n\t}\n\n\tgetString(applyTransforms, offsetX, offsetY) {\n\t\tif (applyTransforms) {\n\t\t\tlet m = _getConsolidatedMatrix(this.path);\n\t\t\treturn rawPathToString(transformRawPath(copyRawPath(this._rawPath), 1, 0, 0, 1, m.e + (offsetX || 0), m.f + (offsetY || 0)));\n\t\t}\n\t\treturn this.path.getAttribute(\"d\");\n\t}\n\n\tgetNormalizedSVG(height, originY, shorten, onEaseError) {\n\t\tlet s = this._rawPath[0],\n\t\t\ttx = s[0] * -1,\n\t\t\tty = (originY === 0) ? 0 : -(originY || s[1]),\n\t\t\tl = s.length,\n\t\t\tsx = 1 / (s[l-2] + tx),\n\t\t\tsy = -height || (s[l-1] + ty),\n\t\t\trnd = 1000,\n\t\t\tpoints, i, x1, y1, x2, y2;\n\t\t_temp.length = 0;\n\t\tif (sy) { //typically y ends at 1 (so that the end values are reached)\n\t\t\tsy = 1 / sy;\n\t\t} else { //in case the ease returns to its beginning value, scale everything proportionally\n\t\t\tsy = -sx;\n\t\t}\n\t\tsx *= rnd;\n\t\tsy *= rnd;\n\t\tfor (i = 0; i < l; i += 2) {\n\t\t\t_temp[i] = (((s[i] + tx) * sx) | 0) / rnd;\n\t\t\t_temp[i+1] = (((s[i+1] + ty) * sy) | 0) / rnd;\n\t\t}\n\n\t\tif (onEaseError) {\n\t\t\tpoints = [];\n\t\t\tl = _temp.length;\n\t\t\tfor (i = 2; i < l; i+=6) {\n\t\t\t\tx1 = _temp[i-2];\n\t\t\t\ty1 = _temp[i-1];\n\t\t\t\tx2 = _temp[i+4];\n\t\t\t\ty2 = _temp[i+5];\n\t\t\t\tpoints.push(x1, y1, x2, y2);\n\t\t\t\tbezierToPoints(x1, y1, _temp[i], _temp[i+1], _temp[i+2], _temp[i+3], x2, y2, 0.001, points, points.length - 2);\n\t\t\t}\n\t\t\tx1 = points[0];\n\t\t\tl = points.length;\n\t\t\tfor (i = 2; i < l; i+=2) {\n\t\t\t\tx2 = points[i];\n\t\t\t\tif (x2 < x1 || x2 > 1 || x2 < 0) {\n\t\t\t\t\tonEaseError();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx1 = x2;\n\t\t\t}\n\t\t}\n\n\t\tif (shorten && l === 8 && _temp[0] === 0 && _temp[1] === 0 && _temp[l-2] === 1 && _temp[l-1] === 1) {\n\t\t\treturn _temp.slice(2, 6).join(\",\");\n\t\t}\n\t\t_temp[2] = \"C\" + _temp[2];\n\t\treturn \"M\" + _temp.join(\",\");\n\t}\n\n}\n\n\n\n\n\nPathEditor.simplifyPoints = simplifyPoints;\nPathEditor.pointsToSegment = pointsToSegment;\nPathEditor.simplifySVG = (data, vars) => {  //takes a <path> element or data string and simplifies it according to whatever tolerance you set (default:1, the bigger the number the more variance there can be). vars: {tolerance:1, cornerThreshold:degrees, curved:true}\n\tlet element, points, i, x1, x2, y1, y2, bezier, precision, tolerance, l, cornerThreshold;\n\tvars = vars || {};\n\ttolerance = vars.tolerance || 1;\n\tprecision = vars.precision || (1 / tolerance);\n\tcornerThreshold = (vars.cornerThreshold === undefined ? 18 : +vars.cornerThreshold) * _DEG2RAD;\n\tif (typeof(data) !== \"string\") { //element\n\t\telement = data;\n\t\tdata = element.getAttribute(\"d\");\n\t}\n\tif (data.charAt(0) === \"#\" || data.charAt(0) === \".\") { //selector text\n\t\telement = _doc.querySelector(data);\n\t\tif (element) {\n\t\t\tdata = element.getAttribute(\"d\");\n\t\t}\n\t}\n\tpoints = (vars.curved === false && !/[achqstvz]/ig.test(data)) ? data.match(_numbersExp) : stringToRawPath(data)[0];\n\tif (vars.curved !== false) {\n\t\tbezier = points;\n\t\tpoints = [];\n\t\tl = bezier.length;\n\t\tfor (i = 2; i < l; i+=6) {\n\t\t\tx1 = +bezier[i-2];\n\t\t\ty1 = +bezier[i-1];\n\t\t\tx2 = +bezier[i+4];\n\t\t\ty2 = +bezier[i+5];\n\t\t\tpoints.push(_round(x1), _round(y1), _round(x2), _round(y2));\n\t\t\tbezierToPoints(x1, y1, +bezier[i], +bezier[i+1], +bezier[i+2], +bezier[i+3], x2, y2, 1 / (precision * 200000), points, points.length - 2);\n\t\t}\n\t\tpoints = pointsToSegment(simplifyPoints(points, tolerance), vars.curviness, cornerThreshold);\n\t\tpoints[2] = \"C\" + points[2];\n\t} else {\n\t\tpoints = simplifyPoints(points, tolerance);\n\t}\n\tdata = \"M\" + points.join(\",\");\n\tif (element) {\n\t\telement.setAttribute(\"d\", data);\n\t}\n\treturn data;\n};\n\nPathEditor.create = (target, vars) => new PathEditor(target, vars);\n\nPathEditor.editingAxis = _editingAxis;\n\nPathEditor.getSnapFunction = (vars) => { //{gridSize, radius, x, y, width, height}\n\tlet r = vars.radius || 2,\n\t\tbig = 1e20,\n\t\tminX = (vars.x || vars.x === 0) ? vars.x : vars.width ? 0 : -big,\n\t\tminY = (vars.y || vars.y === 0) ? vars.y : vars.height ? 0 : -big,\n\t\tmaxX = minX + (vars.width || big*big),\n\t\tmaxY = minY + (vars.height || big*big),\n\t\tcontainX = (vars.containX !== false),\n\t\tcontainY = (vars.containY !== false),\n\t\taxis = vars.axis,\n\t\tgrid = vars.gridSize;\n\tr *= r;\n\treturn p => {\n\t\tlet x = p.x,\n\t\t\ty = p.y,\n\t\t\tgridX, gridY, dx, dy;\n\t\tif ((containX && x < minX) || (dx = x - minX) * dx < r) {\n\t\t\tx = minX;\n\t\t} else if ((containX && x > maxX) || (dx = maxX - x) * dx < r) {\n\t\t\tx = maxX;\n\t\t}\n\t\tif ((containY && y < minY) || (dy = y - minY) * dy < r) {\n\t\t\ty = minY;\n\t\t} else if ((containY && y > maxY) || (dy = maxY - y) * dy < r) {\n\t\t\ty = maxY;\n\t\t}\n\t\tif (axis) {\n\t\t\tdx = x - axis.x;\n\t\t\tdy = y - axis.y;\n\t\t\tif (dx * dx < r) {\n\t\t\t\tx = axis.x;\n\t\t\t}\n\t\t\tif (dy * dy < r) {\n\t\t\t\ty = axis.y;\n\t\t\t}\n\t\t}\n\t\tif (grid) {\n\t\t\tgridX = minX + Math.round((x - minX) / grid) * grid; //closest grid slot on x-axis\n\t\t\tdx = gridX - x;\n\t\t\tgridY = minY + Math.round((y - minY) / grid) * grid; //closest grid slot on y-axis\n\t\t\tdy = gridY - y;\n\t\t\tif (dx * dx + dy * dy < r) {\n\t\t\t\tx = gridX;\n\t\t\t\ty = gridY;\n\t\t\t}\n\t\t}\n\t\tp.x = x;\n\t\tp.y = y;\n\t};\n};\n\nPathEditor.version = \"3.0.2\";\n\nexport { PathEditor as default };","/*!\n * MotionPathHelper 3.0.2\n * https://greensock.com\n *\n * @license Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport PathEditor from \"./utils/PathEditor.js\";\n\nlet gsap, _win, _doc, _docEl, _body, MotionPathPlugin,  _arrayToRawPath, _rawPathToString,\n\t_bonusValidated = 1, //<name>MotionPathHelper</name>\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_isString = value => typeof(value) === \"string\",\n\t_createElement = (type, ns) => {\n\t\tlet e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n\t\treturn e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://greensock.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n\t},\n\t_getPositionOnPage = target => {\n\t\tlet bounds = target.getBoundingClientRect(),\n\t\t\twindowOffsetY = _docEl.clientTop - (_win.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n\t\t\twindowOffsetX = _docEl.clientLeft - (_win.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0);\n\t\treturn {left:bounds.left + windowOffsetX, top:bounds.top + windowOffsetY, right: bounds.right + windowOffsetX, bottom: bounds.bottom + windowOffsetY};\n\t},\n\t_getInitialPath = (x, y) => {\n\t\tlet coordinates = [0,31,8,58,24,75,40,90,69,100,100,100],\n\t\t\ti;\n\t\tfor (i = 0; i < coordinates.length; i+=2) {\n\t\t\tcoordinates[i] += x;\n\t\t\tcoordinates[i+1] += y;\n\t\t}\n\t\treturn \"M\" + x + \",\" + y + \"C\" + coordinates.join(\",\");\n\t},\n\t_getGlobalTime = animation => {\n\t\tlet time = animation.totalTime();\n\t\twhile (animation) {\n\t\t\ttime = animation.startTime() + time / (animation.timeScale() || 1);\n\t\t\tanimation = animation.parent;\n\t\t}\n\t\treturn time;\n\t},\n\t_copyElement,\n\t_initCopyToClipboard = () => {\n\t\t_copyElement = _createElement(\"textarea\");\n\t\t_copyElement.style.display = \"none\";\n\t\t_body.appendChild(_copyElement);\n\t},\n\t_parsePath = (path, target, vars) => (_isString(path) && _selectorExp.test(path)) ? _doc.querySelector(path) : Array.isArray(path) ? _rawPathToString(_arrayToRawPath([{x:gsap.getProperty(target, \"x\"), y:gsap.getProperty(target, \"y\")}, ...path], vars)) : (_isString(path) || path && (path.tagName + \"\").toLowerCase() === \"path\") ? path : 0,\n\t_addCopyToClipboard = (target, getter, onComplete) => {\n\t\ttarget.addEventListener('click', e => {\n\t\t\tif (e.target._gsHelper) {\n\t\t\t\tlet c = getter(e.target);\n\t\t\t\t_copyElement.value = c;\n\t\t\t\tif (c && _copyElement.select) {\n\t\t\t\t\tconsole.log(c);\n\t\t\t\t\t_copyElement.style.display = \"block\";\n\t\t\t\t\t_copyElement.select();\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_doc.execCommand('copy');\n\t\t\t\t\t\t_copyElement.blur();\n\t\t\t\t\t\tif (onComplete) {\n\t\t\t\t\t\t\tonComplete(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.warn(\"Copy didn't work; this browser doesn't permit that.\");\n\t\t\t\t\t}\n\t\t\t\t\t_copyElement.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_identityMatrixObject = {matrix:{a:1, b:0, c:0, d:1, e:0, f:0}},\n\t_getConsolidatedMatrix = target => (target.transform.baseVal.consolidate() || _identityMatrixObject).matrix,\n\t_findMotionPathTween = target => {\n\t\tlet tweens = gsap.getTweensOf(target),\n\t\t\ti = 0;\n\t\tfor (; i < tweens.length; i++) {\n\t\t\tif (tweens[i].vars.motionPath) {\n\t\t\t\treturn tweens[i];\n\t\t\t} else if (tweens[i].timeline) {\n\t\t\t\ttweens.push(...tweens[i].timeline.getChildren());\n\t\t\t}\n\t\t}\n\t},\n\t_initCore = (core, required) => {\n\t\tlet message = \"Please gsap.registerPlugin(MotionPathPlugin)\";\n\t\t_win = window;\n\t\tgsap = gsap || core || _win.gsap || console.warn(message);\n\t\t_doc = document;\n\t\t_body = _doc.body;\n\t\t_docEl = _doc.documentElement;\n\t\tMotionPathPlugin = gsap && gsap.plugins.motionPath;\n\t\tif (!MotionPathPlugin) {\n\t\t\t(required === true) && console.warn(message);\n\t\t} else {\n\t\t\t_initCopyToClipboard();\n\t\t\t_arrayToRawPath = MotionPathPlugin.arrayToRawPath;\n\t\t\t_rawPathToString = MotionPathPlugin.rawPathToString;\n\t\t}\n\t};\n\nexport class MotionPathHelper {\n\n\tconstructor(targetOrTween, vars = {}) {\n\t\tif (!MotionPathPlugin) {\n\t\t\t_initCore(vars.gsap, 1);\n\t\t}\n\t\tlet copyButton = _createElement(\"div\"),\n\t\t\tself = this,\n\t\t\toffset = {x:0, y:0},\n\t\t\ttarget, path, isSVG, startX, startY, position, svg, animation, svgNamespace, temp, matrix, refreshPath, animationToScrub;\n\t\tif (targetOrTween instanceof gsap.core.Tween) {\n\t\t\tanimation = targetOrTween;\n\t\t\ttarget = animation.targets()[0];\n\t\t} else {\n\t\t\ttarget = gsap.utils.toArray(targetOrTween)[0];\n\t\t\tanimation = _findMotionPathTween(target);\n\t\t}\n\t\tpath = _parsePath(vars.path, target, vars);\n\t\tthis.offset = offset;\n\t\tposition = _getPositionOnPage(target);\n\t\tstartX = parseFloat(gsap.getProperty(target, \"x\", \"px\"));\n\t\tstartY = parseFloat(gsap.getProperty(target, \"y\", \"px\"));\n\t\tisSVG = (target.getCTM && target.tagName.toLowerCase() !== \"svg\");\n\t\tif (animation && !path) {\n\t\t\tpath = _parsePath(animation.vars.motionPath.path || animation.vars.motionPath, target, animation.vars.motionPath);\n\t\t}\n\t\tcopyButton.setAttribute(\"class\", \"copy-motion-path\");\n\t\tcopyButton.style.cssText = \"border-radius:8px; background-color:rgba(85, 85, 85, 0.7); color:#fff; cursor:pointer; padding:6px 12px; font-family:Signika Negative, Arial, sans-serif; position:fixed; left:50%; transform:translate(-50%, 0); font-size:19px; bottom:10px\";\n\t\tcopyButton.innerText = \"COPY MOTION PATH\";\n\t\tcopyButton._gsHelper = self;\n\t\t(gsap.utils.toArray(vars.container)[0] || _body).appendChild(copyButton);\n\t\t_addCopyToClipboard(copyButton, () => self.getString(), () => gsap.fromTo(copyButton, {backgroundColor:\"white\"}, {duration:0.5, backgroundColor:\"rgba(85, 85, 85, 0.6)\"}));\n\t\tsvg = path && path.ownerSVGElement;\n\t\tif (!svg) {\n\t\t\tsvgNamespace = (isSVG && target.ownerSVGElement && target.ownerSVGElement.getAttribute(\"xmlns\")) || \"http://www.w3.org/2000/svg\";\n\t\t\tif (isSVG) {\n\t\t\t\tsvg = target.ownerSVGElement;\n\t\t\t\ttemp = target.getBBox();\n\t\t\t\tmatrix = _getConsolidatedMatrix(target);\n\t\t\t\tstartX = matrix.e;\n\t\t\t\tstartY = matrix.f;\n\t\t\t\toffset.x = temp.x;\n\t\t\t\toffset.y = temp.y;\n\t\t\t} else {\n\t\t\t\tsvg = _createElement(\"svg\", svgNamespace);\n\t\t\t\t_body.appendChild(svg);\n\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 100 100\");\n\t\t\t\tsvg.style.cssText = \"overflow:visible; background-color: transparent; position:absolute; width:100px; height:100px; top:\" + position.top + \"px; left:\" + position.left + \"px;\";\n\t\t\t}\n\t\t\ttemp = _isString(path) && !_selectorExp.test(path) ? path : _getInitialPath(startX, startY);\n\t\t\tpath = _createElement(\"path\", svgNamespace);\n\t\t\tpath.setAttribute(\"d\", temp);\n\t\t\tpath.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n\t\t\tpath.style.cssText = \"fill:transparent; stroke-width:\" + (vars.pathWidth || 3) + \"; stroke:\" + (vars.pathColor || \"#555\") + \"; opacity:\" + (vars.pathOpacity || 0.6);\n\t\t\tsvg.appendChild(path);\n\t\t\tif (offset.x || offset.y) {\n\t\t\t\tgsap.set(path, {x:offset.x, y:offset.y});\n\t\t\t}\n\t\t}\n\n\t\tif (!(\"selected\" in vars)) {\n\t\t\tvars.selected = true;\n\t\t}\n\t\tif (!(\"anchorSnap\" in vars)) {\n\t\t\tvars.anchorSnap = p => {\n\t\t\t\tif (p.x * p.x + p.y * p.y < 16) {\n\t\t\t\t\tp.x = p.y = 0;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tanimationToScrub = animation && animation.parent.data === \"nested\" ? animation.parent.parent : animation;\n\n\t\tvars.onPress = () => {\n\t\t\tanimationToScrub.pause(0);\n\t\t};\n\n\t\trefreshPath = () => {\n\t\t\tlet m = _getConsolidatedMatrix(path);\n\t\t\tanimation.vars.motionPath.offsetX = m.e - offset.x;\n\t\t\tanimation.vars.motionPath.offsetY = m.f - offset.y;\n\t\t\tanimation.invalidate();\n\t\t\tanimationToScrub.restart();\n\t\t};\n\t\tvars.onRelease = vars.onDeleteAnchor = refreshPath;\n\n\t\tthis.editor = PathEditor.create(path, vars);\n\t\tif (vars.center) {\n\t\t\tgsap.set(target, {transformOrigin:\"50% 50%\", xPercent:-50, yPercent:-50});\n\t\t}\n\t\tif (animation) {\n\t\t\tif (animation.vars.motionPath.path) {\n\t\t\t\tanimation.vars.motionPath.path = path;\n\t\t\t} else {\n\t\t\t\tanimation.vars.motionPath = {path:path};\n\t\t\t}\n\t\t\tif (animationToScrub.parent !== gsap.globalTimeline) {\n\t\t\t\tgsap.globalTimeline.add(animationToScrub, _getGlobalTime(animationToScrub) - animationToScrub.delay());\n\t\t\t}\n\t\t\tanimationToScrub.repeat(-1).repeatDelay(1);\n\n\t\t} else {\n\t\t\tanimation = animationToScrub = gsap.to(target, {\n\t\t\t\tmotionPath: {\n\t\t\t\t\tpath:path,\n\t\t\t\t\tstart: vars.start || 0,\n\t\t\t\t\tend: (\"end\" in vars) ? vars.end : 1,\n\t\t\t\t\tautoRotate: (\"autoRotate\" in vars) ? vars.autoRotate : false\n\t\t\t\t\t//align: path\n\t\t\t\t},\n\t\t\t\tduration: vars.duration || 5,\n\t\t\t\tease: vars.ease || \"Power1.easeInOut\",\n\t\t\t\trepeat:-1,\n\t\t\t\trepeatDelay:1,\n\t\t\t\tpaused:!vars.path\n\t\t\t});\n\t\t}\n\t\tthis.animation = animation;\n\t}\n\n\tgetString() {\n\t\treturn this.editor.getString(true, -this.offset.x, -this.offset.y);\n\t}\n\n}\n\nMotionPathHelper.register = _initCore;\nMotionPathHelper.create = (target, vars) => new MotionPathHelper(target, vars);\nMotionPathHelper.version = \"3.0.2\";\n\nexport { MotionPathHelper as default };"],"names":["_wrapProgress","value","_copyMetaData","source","copy","totalLength","samples","slice","lookup","minLength","resolution","totalPoints","_bestDistance","_svgPathExp","_numbersExp","_DEG2RAD","Math","PI","_RAD2DEG","sin","_cos","cos","_abs","abs","_sqrt","sqrt","_atan2","atan2","_largeNum","copyRawPath","rawPath","a","i","length","transformRawPath","b","c","d","tx","ty","segment","l","x","y","j","_dirty","arcToSegment","lastX","lastY","rx","ry","angle","largeArcFlag","sweepFlag","angleRad","cosAngle","sinAngle","_sin","TWOPI","dx2","dy2","x1","y1","x1_sq","y1_sq","radiiCheck","rx_sq","ry_sq","sq","coef","cx1","cy1","cx","cy","ux","uy","vx","vy","temp","angleStart","acos","angleExtent","isNaN","segments","ceil","angleIncrement","controlLength","ma","mb","mc","md","push","stringToRawPath","line","sx","sy","ex","ey","difX","difY","command","isRelative","startX","startY","beziers","prevCommand","replace","_scientific","m","n","match","path","relativeX","relativeY","elements","points","errorMessage","console","log","toUpperCase","closed","pop","bezierToPoints","x2","y2","x3","y3","x4","y4","threshold","index","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","dx","dy","d2","d3","splice","pointsToSegment","curviness","cornerThreshold","prevX","prevY","slope","dx1","dx3","dy1","dy3","d1","nextX","nextY","_round","simplifyPoints","tolerance","result","last","parseFloat","simplifyStep","first","simplified","t","maxSqDist","firstX","firstY","getClosestProgressOnBezier","iterations","px","py","start","end","slices","x0","y0","inv","inc","best","max","min","_svgOwner","element","ownerSVGElement","tagName","toLowerCase","_createSibling","parentNode","_doc","_setDoc","doc","ownerDocument","_transformProp","style","_transformOriginProp","_win","window","_identityMatrix","Matrix2D","_docElement","documentElement","_body","body","svg","ns","getAttribute","type","css","e","createElementNS","createElement","_svgContainer","setAttribute","appendChild","_divContainer","cssText","_setMatrix","f","_svgTemps","_divTemps","inverse","this","determinant","multiply","matrix","a2","b2","c2","e2","f2","equals","apply","point","decoratee","getGlobalMatrix","temps","container","_placeSiblings","isRootSVG","siblings","getBBox","transform","baseVal","consolidate","top","offsetTop","left","offsetLeft","getComputedStyle","position","b1","getBoundingClientRect","b3","parent","isFixed","_isFixed","nodeType","_getDocScrollLeft","pageXOffset","scrollLeft","_getDocScrollTop","pageYOffset","scrollTop","removeChild","_emptyFunc","_preventDefault","event","preventDefault","preventManipulation","_createElement","_createSVG","attributes","p","reg","undefined","setAttributeNS","_getConsolidatedMatrix","target","_identityMatrixObject","_checkDeselect","_gsSelection","_isPressed","_getTime","_lastInteraction","_selectedPaths","deselect","_addListener","func","capture","addEventListener","touchType","_touchEventLookup","passive","substr","attachEvent","_removeListener","removeEventListener","detachEvent","_onMultiTouchDocumentEnd","_isMultiTouching","touches","_dragCount","_onMultiTouchDocument","_bind","scope","call","_callback","self","param","callback","vars","callbackScope","_resetSelection","_copyElement","display","select","_onPress","touchEventTarget","ctm","_matrix","getItem","_ctm","indexOf","currentTarget","_onRelease","_onMove","_supportsPointer","changedTouches","touch","touchID","identifier","pointerId","_startPointerY","pointerY","pageY","_startPointerX","pointerX","pageX","_startElementX","_startElementY","isPressed","onPress","pointerEvent","originalEvent","_enabled","setPointerPosition","onDrag","force","_hasTouchID","list","ID","_interacted","wasDragging","isDragging","onClick","onDragRelease","onRelease","onDragEnd","_createSegmentAnchors","editor","Anchor","_getLength","i2","_CTRL","_ALT","_SHIFT","_CMD","_recentlyAddedAnchor","_tempDiv","_coreInitted","_selectionColor","Date","now","getTime","_editingAxis","_history","_point","_temp","_comma","DraggableSVG","xChange","yChange","snap","enabled","arguments","_onClick","dragging","endDrag","querySelectorAll","maxX","minX","_bounds","s","_draggable","update","prevSmooth","smooth","_circleHandle","_squareHandle","_selection","fill","stroke","strokeWidth","vectorEffect","PathEditor","anchor","_editingAnchor","init","pathData","createAnchors","_rawPath","anchorVars","anchorSnap","_onDragAnchor","_onPressAnchor","_onClickAnchor","_onDragEndAnchor","_anchors","_selectedAnchors","concat","_handle1","_handle2","_selectionPath","_selectionHittest","_g","_getConcatenatedTransforms","owner","_updateAnchors","_saveState","_addHistory","pathEditor","selectedIndexes","unshift","_onClickSelectionPath","visibility","altKey","newIndex","closestData","getScreenCTM","clientX","clientY","getClosestData","closest","bestDistance","subdivideSegment","ax","ay","cp1x","cp1y","cp2x","cp2y","x1a","y1a","x2a","y2a","_onClickHandle1","_onClickHandle2","isSelected","allAnchors","_onDragPath","_deleteSelectedAnchors","anchors","onDeleteAnchor","angle1","angle2","length1","length2","rnd","isEnd","_line1","_line2","_onPressAlt","_onReleaseAlt","_onPressHandle1","_oppositeHandleLength","_onPressHandle2","_onReleaseHandle","_onDragHandle1","_onDragHandle2","changeX","changeY","readPath","join","onUpdate","getRawPath","applyTransforms","offsetX","offsetY","getString","rawPathToString","_isNumber","sl","getNormalizedSVG","height","originY","shorten","onEaseError","_initCore","document","types","standard","split","converted","onpointerdown","onmspointerdown","obj","SVGElement","prototype","getTransformToElement","state","key","keyCode","which","keyString","shift","onUndo","PointerEvent","pointerEvents","size","handleSize","_getSquarePathData","_getCirclePathData","rcirc","handleSnap","selectionItems","draggable","selected","simplifySVG","data","bezier","precision","charAt","querySelector","curved","test","create","editingAxis","getSnapFunction","r","radius","big","width","minY","maxY","containX","containY","axis","grid","gridSize","gridX","gridY","round","version","_isString","_parsePath","_selectorExp","Array","isArray","_rawPathToString","_arrayToRawPath","gsap","getProperty","core","required","message","warn","_docEl","MotionPathPlugin","plugins","motionPath","_initCopyToClipboard","arrayToRawPath","_bonusValidated","MotionPathHelper","offset","targetOrTween","isSVG","animation","svgNamespace","refreshPath","animationToScrub","copyButton","Tween","targets","utils","toArray","_findMotionPathTween","tweens","getTweensOf","timeline","getChildren","_getPositionOnPage","bounds","windowOffsetY","clientTop","windowOffsetX","clientLeft","right","bottom","getCTM","innerText","_gsHelper","_addCopyToClipboard","getter","onComplete","execCommand","blur","err","fromTo","backgroundColor","duration","_getInitialPath","coordinates","pathWidth","pathColor","pathOpacity","set","pause","invalidate","restart","center","transformOrigin","xPercent","yPercent","globalTimeline","add","_getGlobalTime","time","totalTime","startTime","timeScale","delay","repeat","repeatDelay","to","autoRotate","ease","paused","register"],"mappings":"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"}